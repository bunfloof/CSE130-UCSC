1
00:00:01,199 --> 00:00:04,560
to demonstrate that your call is the

2
00:00:04,560 --> 00:00:07,140
same as the other students or from the

3
00:00:07,140 --> 00:00:09,900
internet but it does not mean does not

4
00:00:09,900 --> 00:00:13,799
mean you are safe some students who got

5
00:00:13,799 --> 00:00:14,639
like

6
00:00:14,639 --> 00:00:18,300
maybe problems a little bit like have

7
00:00:18,300 --> 00:00:21,660
some similar code like 50 percentage 60

8
00:00:21,660 --> 00:00:25,560
percentage or 30 percentage then these

9
00:00:25,560 --> 00:00:29,820
students ta will Mark a warring around

10
00:00:29,820 --> 00:00:32,098
the name but we will not tell you who

11
00:00:32,098 --> 00:00:34,739
they are so we will check

12
00:00:34,739 --> 00:00:36,300
at the

13
00:00:36,300 --> 00:00:39,600
um when the class ends I'm going to take

14
00:00:39,600 --> 00:00:41,940
a look at all together of everyone's

15
00:00:41,940 --> 00:00:43,379
code

16
00:00:43,379 --> 00:00:47,340
but in any case if you receive a zero

17
00:00:47,340 --> 00:00:51,600
grade now that means you your code is

18
00:00:51,600 --> 00:00:53,700
exactly the same as

19
00:00:53,700 --> 00:00:56,820
another students or some students in the

20
00:00:56,820 --> 00:01:01,260
class so that is unacceptable

21
00:01:01,559 --> 00:01:03,539
okay

22
00:01:03,539 --> 00:01:07,200
so do not try to do that you you you are

23
00:01:07,200 --> 00:01:10,080
learning this course because you want to

24
00:01:10,080 --> 00:01:13,080
learn something okay not just got a

25
00:01:13,080 --> 00:01:15,200
great

26
00:01:15,780 --> 00:01:19,260
okay so problem includes boring codes or

27
00:01:19,260 --> 00:01:22,020
reports from someone

28
00:01:22,020 --> 00:01:24,960
reading previous solution giving code or

29
00:01:24,960 --> 00:01:26,880
reports to someone okay this is very

30
00:01:26,880 --> 00:01:28,740
important

31
00:01:28,740 --> 00:01:31,979
you may develop your call by yourself

32
00:01:31,979 --> 00:01:34,380
you write your call by yourself however

33
00:01:34,380 --> 00:01:36,240
you

34
00:01:36,240 --> 00:01:39,360
you give your code to someone else in

35
00:01:39,360 --> 00:01:42,600
the class you or automatically got zero

36
00:01:42,600 --> 00:01:46,939
two and you fail

37
00:01:47,340 --> 00:01:52,460
Okay so yeah protect your code okay

38
00:01:53,340 --> 00:01:56,759
so give give codes or reports to someone

39
00:01:56,759 --> 00:01:58,560
else

40
00:01:58,560 --> 00:02:00,720
calling code reports from anyone

41
00:02:00,720 --> 00:02:03,240
including from the internet helping

42
00:02:03,240 --> 00:02:05,280
someone to write your code

43
00:02:05,280 --> 00:02:08,098
or your reports submitting someone else

44
00:02:08,098 --> 00:02:10,258
code or reports as your own and looking

45
00:02:10,258 --> 00:02:15,200
at anyone else code or reports okay

46
00:02:16,980 --> 00:02:19,560
so we are computer science students we

47
00:02:19,560 --> 00:02:22,920
know that it's very real it's very real

48
00:02:22,920 --> 00:02:25,200
that your code is the same as the other

49
00:02:25,200 --> 00:02:27,840
scope well by the same I mean sometimes

50
00:02:27,840 --> 00:02:29,879
you may just change the valuable name

51
00:02:29,879 --> 00:02:33,120
but it's very easy to to to figure it

52
00:02:33,120 --> 00:02:37,379
out right so um

53
00:02:37,379 --> 00:02:39,959
so you can discuss with your classmates

54
00:02:39,959 --> 00:02:42,420
you can discuss it with your with the

55
00:02:42,420 --> 00:02:44,760
tutor with the TA you can ask for their

56
00:02:44,760 --> 00:02:46,980
help but do not

57
00:02:46,980 --> 00:02:49,680
give the code or copy the code from

58
00:02:49,680 --> 00:02:52,379
anyone in in a class

59
00:02:52,379 --> 00:02:55,819
okay so that's the honor code

60
00:02:58,140 --> 00:03:01,739
so um if you have any questions for your

61
00:03:01,739 --> 00:03:03,900
grades so feel free to

62
00:03:03,900 --> 00:03:04,560
um

63
00:03:04,560 --> 00:03:08,760
to ask my TA or my ta is Sean shun

64
00:03:08,760 --> 00:03:11,220
so this is our RTA

65
00:03:11,220 --> 00:03:13,700
okay

66
00:03:15,000 --> 00:03:18,180
so this is about the honor code

67
00:03:18,180 --> 00:03:20,239
um

68
00:03:27,900 --> 00:03:31,200
and today as we discussed I'm going to

69
00:03:31,200 --> 00:03:33,900
um we are going to have a review of our

70
00:03:33,900 --> 00:03:36,540
midterm

71
00:03:36,540 --> 00:03:38,700
our midterm and uh you will get your

72
00:03:38,700 --> 00:03:42,299
grades very soon in the um

73
00:03:42,299 --> 00:03:44,879
so for the first part of the class I'm

74
00:03:44,879 --> 00:03:48,060
going to discuss the solutions with you

75
00:03:48,060 --> 00:03:52,440
about our midterm okay then the next

76
00:03:52,440 --> 00:03:54,900
part we are going to learn the file

77
00:03:54,900 --> 00:03:57,140
system

78
00:03:58,500 --> 00:04:01,099
too

79
00:04:02,700 --> 00:04:05,299
what

80
00:04:06,360 --> 00:04:09,019
that's

81
00:04:11,120 --> 00:04:14,299
one problem

82
00:04:39,350 --> 00:04:40,740
[Music]

83
00:04:40,740 --> 00:04:43,800
uh okay so we are going to

84
00:04:43,800 --> 00:04:44,880
um

85
00:04:44,880 --> 00:04:48,120
have a review about our midterm and also

86
00:04:48,120 --> 00:04:50,340
we can have a review about what we have

87
00:04:50,340 --> 00:04:53,180
learned so far

88
00:04:55,919 --> 00:04:58,440
let's start with the true false

89
00:04:58,440 --> 00:05:01,160
questions okay

90
00:05:04,139 --> 00:05:06,500
yeah

91
00:05:07,080 --> 00:05:09,440
no

92
00:05:09,540 --> 00:05:12,660
no no we are not going to release that

93
00:05:12,660 --> 00:05:16,040
but you all got your grade

94
00:05:19,080 --> 00:05:22,280
oh you're good

95
00:05:22,560 --> 00:05:24,419
um

96
00:05:24,419 --> 00:05:26,880
you you got I think they when they're

97
00:05:26,880 --> 00:05:30,300
grading they will tell you

98
00:05:30,300 --> 00:05:32,639
whether you are correct or not

99
00:05:32,639 --> 00:05:35,160
but I cannot distribute stats in the

100
00:05:35,160 --> 00:05:37,940
cameras because

101
00:05:46,039 --> 00:05:51,620
they will give you the grading criteria

102
00:05:55,080 --> 00:05:57,419
yeah something like that they will tell

103
00:05:57,419 --> 00:05:59,940
you why you you didn't get a point

104
00:05:59,940 --> 00:06:02,460
something like that okay so feel free to

105
00:06:02,460 --> 00:06:04,919
ask me questions but I cannot distribute

106
00:06:04,919 --> 00:06:07,680
stats on the canvas because it will be

107
00:06:07,680 --> 00:06:10,560
or distributed to the next year or next

108
00:06:10,560 --> 00:06:11,820
year okay

109
00:06:11,820 --> 00:06:13,820
okay

110
00:06:13,940 --> 00:06:17,360
it's larger

111
00:06:19,320 --> 00:06:22,500
so it's starting from this the operating

112
00:06:22,500 --> 00:06:25,319
system is not responsible for resource

113
00:06:25,319 --> 00:06:28,199
allocation between computing

114
00:06:28,199 --> 00:06:31,080
processes that's fourth right so we know

115
00:06:31,080 --> 00:06:31,979
the

116
00:06:31,979 --> 00:06:33,979
um

117
00:06:34,319 --> 00:06:36,539
so there are two rules of operating

118
00:06:36,539 --> 00:06:38,880
system means abstraction and resource

119
00:06:38,880 --> 00:06:41,400
Management's rise on in the resource

120
00:06:41,400 --> 00:06:44,100
management results or location it's an

121
00:06:44,100 --> 00:06:45,539
important part of the resource

122
00:06:45,539 --> 00:06:47,699
management

123
00:06:47,699 --> 00:06:50,400
besides resource allocation resources

124
00:06:50,400 --> 00:06:52,919
scheduling it means scheduling algorithm

125
00:06:52,919 --> 00:06:55,560
page replacement algorithms swapping

126
00:06:55,560 --> 00:06:57,720
algorithms

127
00:06:57,720 --> 00:06:59,940
they all belonging to the resourcement

128
00:06:59,940 --> 00:07:02,520
resource management okay

129
00:07:02,520 --> 00:07:04,380
because of force

130
00:07:04,380 --> 00:07:08,699
I interrupt table contains address of

131
00:07:08,699 --> 00:07:10,979
the handlers for the for the various

132
00:07:10,979 --> 00:07:13,560
interrupts

133
00:07:13,560 --> 00:07:15,720
so we're talking about that right

134
00:07:15,720 --> 00:07:17,819
in one of the slides we show that how

135
00:07:17,819 --> 00:07:21,479
the OS handled interrupts right so um

136
00:07:21,479 --> 00:07:25,259
for every interrupt Irene wrapped they

137
00:07:25,259 --> 00:07:27,780
actually send a single to the CPU so the

138
00:07:27,780 --> 00:07:30,539
for example the

139
00:07:30,539 --> 00:07:32,460
um I think the many singles they have

140
00:07:32,460 --> 00:07:34,979
many integers different integers and

141
00:07:34,979 --> 00:07:37,560
each integer responds to a corresponding

142
00:07:37,560 --> 00:07:40,620
interrupts table and it tells you how to

143
00:07:40,620 --> 00:07:43,199
handle the handle difference single so

144
00:07:43,199 --> 00:07:44,639
for example some single is just the

145
00:07:44,639 --> 00:07:48,900
exception something else is like

146
00:07:48,900 --> 00:07:50,639
are

147
00:07:50,639 --> 00:07:51,180
um

148
00:07:51,180 --> 00:07:54,240
drawing another process there are many

149
00:07:54,240 --> 00:07:57,120
different singles okay and uh okay now

150
00:07:57,120 --> 00:08:00,180
dma so dma is director memory access

151
00:08:00,180 --> 00:08:04,020
right it's a mechanism for allowing

152
00:08:04,020 --> 00:08:07,500
and IO devices to transfer data to and

153
00:08:07,500 --> 00:08:10,740
from memory without involving CPU in the

154
00:08:10,740 --> 00:08:13,919
transfer so we talk about that

155
00:08:13,919 --> 00:08:17,039
in the in our introduction it's about

156
00:08:17,039 --> 00:08:20,879
the three three type of food three type

157
00:08:20,879 --> 00:08:23,639
of communication

158
00:08:23,639 --> 00:08:26,340
for the data transfer so if you still

159
00:08:26,340 --> 00:08:28,580
remember what are the three type of

160
00:08:28,580 --> 00:08:32,580
communication there's IO by poding right

161
00:08:32,580 --> 00:08:36,059
it's by after bytes very very slow bite

162
00:08:36,059 --> 00:08:38,039
of the bytes very very slow and another

163
00:08:38,039 --> 00:08:39,479
approach is

164
00:08:39,479 --> 00:08:42,719
is IO by interrupts right so you send

165
00:08:42,719 --> 00:08:44,820
the interrupt to the CPU say hey I need

166
00:08:44,820 --> 00:08:47,519
to do the i o I need to do the transfer

167
00:08:47,519 --> 00:08:50,220
and then the CPU say okay you do you do

168
00:08:50,220 --> 00:08:52,440
your job it will give you back a Handler

169
00:08:52,440 --> 00:08:54,779
and the handle help you to do the data

170
00:08:54,779 --> 00:08:56,279
transfer after we finish you send

171
00:08:56,279 --> 00:08:58,800
another interrupt to the CPU saying that

172
00:08:58,800 --> 00:09:01,320
oh I'm finished that is IO by interrupt

173
00:09:01,320 --> 00:09:04,500
it's faster it's much faster than i o by

174
00:09:04,500 --> 00:09:08,700
pouring however it's still not quite

175
00:09:08,700 --> 00:09:11,220
efficient if you transfer if you want to

176
00:09:11,220 --> 00:09:13,860
transfer a large amount of data between

177
00:09:13,860 --> 00:09:17,459
the CPU and IO resources so there's a

178
00:09:17,459 --> 00:09:19,800
approach called dma directed memory

179
00:09:19,800 --> 00:09:22,080
access it's going to build a channel

180
00:09:22,080 --> 00:09:26,279
between the CPU and the disk so sorry

181
00:09:26,279 --> 00:09:28,980
memory and the disk so without the inter

182
00:09:28,980 --> 00:09:33,839
without the involving the CPU inner

183
00:09:33,839 --> 00:09:37,560
control we can do a very fast transfer

184
00:09:37,560 --> 00:09:39,899
from the memory to the disk so that is

185
00:09:39,899 --> 00:09:42,600
dma so it's true

186
00:09:42,600 --> 00:09:43,920
the next

187
00:09:43,920 --> 00:09:49,160
each thread of a process has its own

188
00:09:49,200 --> 00:09:51,480
and virtual address space so anyone know

189
00:09:51,480 --> 00:09:54,380
why it's of what

190
00:09:55,019 --> 00:09:57,680
oh what

191
00:09:58,920 --> 00:10:01,640
I say again

192
00:10:05,160 --> 00:10:09,140
I didn't get that yeah

193
00:10:13,080 --> 00:10:17,519
so each each thread of a process so each

194
00:10:17,519 --> 00:10:19,620
thread

195
00:10:19,620 --> 00:10:22,260
if the Surah several threats belonging

196
00:10:22,260 --> 00:10:24,360
to the same process they will not have

197
00:10:24,360 --> 00:10:26,940
their own virtual address space they are

198
00:10:26,940 --> 00:10:29,399
going to they're going to share in that

199
00:10:29,399 --> 00:10:33,000
that is why we say that threats does not

200
00:10:33,000 --> 00:10:34,800
need to do threads belonging to the same

201
00:10:34,800 --> 00:10:36,540
process does not need to do compact

202
00:10:36,540 --> 00:10:38,100
switch because they have the same

203
00:10:38,100 --> 00:10:39,600
virtual address

204
00:10:39,600 --> 00:10:41,519
right

205
00:10:41,519 --> 00:10:45,180
so but if different threats belonging to

206
00:10:45,180 --> 00:10:47,820
different process they will have their

207
00:10:47,820 --> 00:10:49,800
own virtual address space

208
00:10:49,800 --> 00:10:51,600
but if they belonging to the same

209
00:10:51,600 --> 00:10:53,339
process they will not have their own

210
00:10:53,339 --> 00:10:55,440
virtual address space

211
00:10:55,440 --> 00:10:57,600
that's the difference so maybe in the in

212
00:10:57,600 --> 00:11:00,620
the final I would say like

213
00:11:01,800 --> 00:11:04,860
like a threads of two process have its

214
00:11:04,860 --> 00:11:06,720
own virtual have their own virtual

215
00:11:06,720 --> 00:11:08,100
address space then

216
00:11:08,100 --> 00:11:11,640
that is true in that case it is true

217
00:11:11,640 --> 00:11:13,920
okay and then another one

218
00:11:13,920 --> 00:11:16,860
an advantage of implementing stress in

219
00:11:16,860 --> 00:11:20,279
user space is that they do not incur

220
00:11:20,279 --> 00:11:24,060
overhead of having the OS schedule their

221
00:11:24,060 --> 00:11:26,660
execution

222
00:11:27,240 --> 00:11:29,640
that's just three or the context the

223
00:11:29,640 --> 00:11:31,440
differences between the differences

224
00:11:31,440 --> 00:11:34,920
between stress and process right why we

225
00:11:34,920 --> 00:11:37,380
say that contact switch between the our

226
00:11:37,380 --> 00:11:42,180
threads is more is very lightweight

227
00:11:42,180 --> 00:11:45,240
when the CPU is in kernel mode the CPU

228
00:11:45,240 --> 00:11:47,820
is prevented from accessing areas of the

229
00:11:47,820 --> 00:11:51,779
memory that are not owned by the current

230
00:11:51,779 --> 00:11:54,420
process

231
00:11:54,420 --> 00:11:57,360
why why is force

232
00:11:57,360 --> 00:12:00,320
why is the force

233
00:12:06,720 --> 00:12:09,540
yes very good very good if it is in user

234
00:12:09,540 --> 00:12:12,180
mode then it is memory restricted you

235
00:12:12,180 --> 00:12:15,180
you are not going to allow to access the

236
00:12:15,180 --> 00:12:17,700
memory outside outside of your own

237
00:12:17,700 --> 00:12:18,779
address

238
00:12:18,779 --> 00:12:21,240
of your own process but if it's in

239
00:12:21,240 --> 00:12:24,240
kernel mode that means os are going to

240
00:12:24,240 --> 00:12:26,100
take the control of the resource

241
00:12:26,100 --> 00:12:31,019
allocation so OS can gather get memory

242
00:12:31,019 --> 00:12:32,519
anywhere

243
00:12:32,519 --> 00:12:34,740
that is the why we need the two modes

244
00:12:34,740 --> 00:12:36,779
the chronomous and the user mode because

245
00:12:36,779 --> 00:12:39,480
we want to protect the protect the

246
00:12:39,480 --> 00:12:43,279
restricted resources right

247
00:12:44,579 --> 00:12:47,220
okay so here in round Robin's Gathering

248
00:12:47,220 --> 00:12:50,519
it is advantageous to give each i o

249
00:12:50,519 --> 00:12:53,760
bounce process along Quantum then each

250
00:12:53,760 --> 00:12:56,220
of the CPU bounds process

251
00:12:56,220 --> 00:12:59,300
wise Force

252
00:13:00,839 --> 00:13:02,700
yeah

253
00:13:02,700 --> 00:13:05,459
no oh sorry

254
00:13:05,459 --> 00:13:09,260
no I'm sorry you raised the head

255
00:13:10,320 --> 00:13:14,120
in round robin schedule yes

256
00:13:30,540 --> 00:13:34,079
so what is the definition of the of the

257
00:13:34,079 --> 00:13:36,420
wrong Robin what the definition of the

258
00:13:36,420 --> 00:13:38,899
wrong Robin

259
00:13:43,139 --> 00:13:45,560
definition

260
00:13:45,660 --> 00:13:48,139
yes

261
00:13:59,180 --> 00:14:01,800
this is not round robin with the

262
00:14:01,800 --> 00:14:04,680
priority this is wrong Robin

263
00:14:04,680 --> 00:14:07,680
if if it is that there's a priority with

264
00:14:07,680 --> 00:14:09,720
the wrong Robin that may be a different

265
00:14:09,720 --> 00:14:10,740
thought

266
00:14:10,740 --> 00:14:12,959
think of that if it is wrong Robin we

267
00:14:12,959 --> 00:14:15,899
remember that John Robin spew just sets

268
00:14:15,899 --> 00:14:19,200
the same compound okay same content to

269
00:14:19,200 --> 00:14:21,779
every process every process

270
00:14:21,779 --> 00:14:23,279
right

271
00:14:23,279 --> 00:14:26,220
now let's see let's see one is why it is

272
00:14:26,220 --> 00:14:29,399
better to give IO bound process a longer

273
00:14:29,399 --> 00:14:33,560
quarter than the CPU bound process

274
00:14:37,380 --> 00:14:40,680
like which one should get if it is wrong

275
00:14:40,680 --> 00:14:43,260
Robin with the priority queue if it is

276
00:14:43,260 --> 00:14:45,420
the wrong Robin you remember like we

277
00:14:45,420 --> 00:14:48,120
when we talking about the CPU scheduling

278
00:14:48,120 --> 00:14:49,860
algorithm we're talking about several

279
00:14:49,860 --> 00:14:52,380
algorithms right the

280
00:14:52,380 --> 00:14:53,040
um

281
00:14:53,040 --> 00:14:57,139
first thing in first out right

282
00:14:57,660 --> 00:14:59,820
and the shortest job first the shorter

283
00:14:59,820 --> 00:15:02,579
remaining job first round robin

284
00:15:02,579 --> 00:15:05,399
priority queue with the round robin

285
00:15:05,399 --> 00:15:07,079
and the lottery

286
00:15:07,079 --> 00:15:10,800
right in so if it is wrong Robin if it's

287
00:15:10,800 --> 00:15:12,660
only wrong Robin that means that

288
00:15:12,660 --> 00:15:15,000
everyone got the same column everyone

289
00:15:15,000 --> 00:15:18,000
got the same column but in the case if

290
00:15:18,000 --> 00:15:21,000
it is the priority if it is a priority

291
00:15:21,000 --> 00:15:22,980
queue with the wrong Robin and the

292
00:15:22,980 --> 00:15:26,760
priority if the priority is is given the

293
00:15:26,760 --> 00:15:29,399
i o bounce process then the i o bound

294
00:15:29,399 --> 00:15:32,220
process can get more cotton

295
00:15:32,220 --> 00:15:35,519
if it is given if the priority is given

296
00:15:35,519 --> 00:15:37,500
to the CPU bound process then CPU bound

297
00:15:37,500 --> 00:15:39,480
forces get more cotton

298
00:15:39,480 --> 00:15:42,500
okay so the the the the

299
00:15:42,500 --> 00:15:45,120
Trap here is the wrong Robin's Gathering

300
00:15:45,120 --> 00:15:48,620
okay let's look at this

301
00:15:48,720 --> 00:15:52,380
if unbatched jobs are scheduled use the

302
00:15:52,380 --> 00:15:54,899
shortest job first schedule and shortage

303
00:15:54,899 --> 00:15:57,600
job the total time it takes to execute

304
00:15:57,600 --> 00:16:00,779
the end process is less than using any

305
00:16:00,779 --> 00:16:04,800
other batch schedule assuming no two

306
00:16:04,800 --> 00:16:07,079
jobs take the

307
00:16:07,079 --> 00:16:10,220
take the same time

308
00:16:13,980 --> 00:16:17,060
or is the force

309
00:16:19,320 --> 00:16:21,540
well and you still remember the shortest

310
00:16:21,540 --> 00:16:24,660
job first Gathering what is the shortest

311
00:16:24,660 --> 00:16:27,920
job versus Gathering

312
00:16:32,699 --> 00:16:34,860
shorten the job first should his job

313
00:16:34,860 --> 00:16:39,180
versus Gathering that is that we

314
00:16:39,180 --> 00:16:41,759
unbatched Jobs means that let's say the

315
00:16:41,759 --> 00:16:44,399
batch jobs come arrive at the same time

316
00:16:44,399 --> 00:16:47,160
right at the same time and then we find

317
00:16:47,160 --> 00:16:49,740
out which one has the shortest

318
00:16:49,740 --> 00:16:54,259
job which one is the shortest job so we

319
00:16:54,480 --> 00:16:57,000
put this first we put the shorten the

320
00:16:57,000 --> 00:16:58,440
job first

321
00:16:58,440 --> 00:17:01,040
right

322
00:17:03,779 --> 00:17:05,819
then the total time what is the total

323
00:17:05,819 --> 00:17:08,059
time

324
00:17:11,520 --> 00:17:15,559
so we have like say a yeah

325
00:17:22,799 --> 00:17:25,260
the total time is not the total time is

326
00:17:25,260 --> 00:17:28,319
the total I will ask you is in say is a

327
00:17:28,319 --> 00:17:29,880
let's say a

328
00:17:29,880 --> 00:17:31,080
B

329
00:17:31,080 --> 00:17:33,140
C

330
00:17:38,100 --> 00:17:40,559
so when we execute stats then what is

331
00:17:40,559 --> 00:17:42,780
the total time to excuse them then we so

332
00:17:42,780 --> 00:17:46,620
they'll if their job if their job

333
00:17:46,620 --> 00:17:49,440
time is a smaller than b is more than C

334
00:17:49,440 --> 00:17:51,539
smaller than D then what we are going to

335
00:17:51,539 --> 00:17:54,299
executing is that a first isn't B then C

336
00:17:54,299 --> 00:17:58,640
then D and then the total time is a

337
00:18:12,000 --> 00:18:14,039
right so

338
00:18:14,039 --> 00:18:16,980
but is the the widest Force white is

339
00:18:16,980 --> 00:18:18,720
force

340
00:18:18,720 --> 00:18:20,880
Force means that there's approach who

341
00:18:20,880 --> 00:18:21,840
has

342
00:18:21,840 --> 00:18:23,460
who has

343
00:18:23,460 --> 00:18:27,620
smaller total time than this

344
00:18:29,160 --> 00:18:31,500
we're talking about several algorithms

345
00:18:31,500 --> 00:18:33,360
right

346
00:18:33,360 --> 00:18:37,320
so which one may have smaller time

347
00:18:37,320 --> 00:18:40,080
still the approach called one just

348
00:18:40,080 --> 00:18:42,600
searches the job remaining

349
00:18:42,600 --> 00:18:45,380
time right

350
00:18:45,600 --> 00:18:47,640
that will be faster why because it will

351
00:18:47,640 --> 00:18:50,880
keep keep tracking the other their

352
00:18:50,880 --> 00:18:53,539
remaining time

353
00:18:58,679 --> 00:19:01,320
this is the total term wrong time and

354
00:19:01,320 --> 00:19:04,020
then if we might divide 4 into the

355
00:19:04,020 --> 00:19:07,220
average term wrong card

356
00:19:15,660 --> 00:19:18,059
no no no the total time it takes to

357
00:19:18,059 --> 00:19:19,380
execute

358
00:19:19,380 --> 00:19:21,780
to execute the end process the total

359
00:19:21,780 --> 00:19:24,240
time it takes to execute the end process

360
00:19:24,240 --> 00:19:26,700
so you want to actually let's say the

361
00:19:26,700 --> 00:19:28,620
full process what is the total time to

362
00:19:28,620 --> 00:19:29,880
excuse them

363
00:19:29,880 --> 00:19:31,919
you'll need to actually a first right

364
00:19:31,919 --> 00:19:34,200
while a is executing

365
00:19:34,200 --> 00:19:36,539
then B needs to raise a to be finished

366
00:19:36,539 --> 00:19:40,140
all right then so that's why

367
00:19:40,140 --> 00:19:43,200
how much time to execute B is a plus b

368
00:19:43,200 --> 00:19:45,120
right

369
00:19:45,120 --> 00:19:48,380
yeah Andrew

370
00:19:53,520 --> 00:19:56,520
it's actually the oh okay I will check

371
00:19:56,520 --> 00:19:59,100
the take a look at the textbook but

372
00:19:59,100 --> 00:20:00,960
there's another another approach called

373
00:20:00,960 --> 00:20:03,360
the shortest job remaining time right

374
00:20:03,360 --> 00:20:06,020
remaining

375
00:20:08,700 --> 00:20:10,880
yeah it's preemptive yeah yeah

376
00:20:10,880 --> 00:20:14,840
preemptive version okay

377
00:20:15,360 --> 00:20:17,940
let's see this okay if a system has a

378
00:20:17,940 --> 00:20:19,860
small turnaround time the time between

379
00:20:19,860 --> 00:20:22,500
submission and combination then it

380
00:20:22,500 --> 00:20:24,179
usually means that this system has a

381
00:20:24,179 --> 00:20:26,100
larger throughput so we talk about that

382
00:20:26,100 --> 00:20:27,720
we talk about that exactly the same

383
00:20:27,720 --> 00:20:30,059
question in the class right

384
00:20:30,059 --> 00:20:33,020
we talk about that

385
00:20:33,240 --> 00:20:35,700
this is a force right this is force

386
00:20:35,700 --> 00:20:38,120
right

387
00:20:41,520 --> 00:20:44,280
this is force four circles

388
00:20:44,280 --> 00:20:48,020
this this is fun

389
00:20:51,480 --> 00:20:53,940
um so that's the text mode says that the

390
00:20:53,940 --> 00:20:56,160
shortest job remaining

391
00:20:56,160 --> 00:20:57,600
first

392
00:20:57,600 --> 00:21:00,360
the preemptive portion of the shortest

393
00:21:00,360 --> 00:21:02,760
job first so there's another algorithm

394
00:21:02,760 --> 00:21:05,700
we talk about discuss the shortest job

395
00:21:05,700 --> 00:21:07,740
first the algorithm and the shortest job

396
00:21:07,740 --> 00:21:10,260
short to the remaining job first

397
00:21:10,260 --> 00:21:11,880
yeah

398
00:21:11,880 --> 00:21:14,100
and then this okay if a system has a

399
00:21:14,100 --> 00:21:15,900
smaller we talk about that right that is

400
00:21:15,900 --> 00:21:17,940
the that is same question as asking you

401
00:21:17,940 --> 00:21:21,960
oh a small sentencing means a larger

402
00:21:21,960 --> 00:21:23,460
throughputs that's the same question

403
00:21:23,460 --> 00:21:26,100
right we using the example about the IL

404
00:21:26,100 --> 00:21:29,039
Playing Airplane is very fast it's a

405
00:21:29,039 --> 00:21:32,400
super small airplane but it's very fast

406
00:21:32,400 --> 00:21:34,320
so it has a small town runtime but

407
00:21:34,320 --> 00:21:36,600
throughput the L plane Can Only Hold one

408
00:21:36,600 --> 00:21:38,460
person this throughput is very

409
00:21:38,460 --> 00:21:41,700
it's very small or for a very big

410
00:21:41,700 --> 00:21:44,400
airport very big airport it takes like

411
00:21:44,400 --> 00:21:46,919
double of the time but it takes like 300

412
00:21:46,919 --> 00:21:50,039
percent then the throughput is larger

413
00:21:50,039 --> 00:21:51,600
so

414
00:21:51,600 --> 00:21:53,700
it's actually asking the same question

415
00:21:53,700 --> 00:21:57,799
as the latency and the throughputs

416
00:21:59,039 --> 00:22:02,419
right the relationship between London

417
00:22:02,419 --> 00:22:05,760
okay so let's say this dialogue can

418
00:22:05,760 --> 00:22:08,580
never occur if no process is allowed to

419
00:22:08,580 --> 00:22:10,679
hold the resource while requesting

420
00:22:10,679 --> 00:22:13,320
another resource that's ask you the

421
00:22:13,320 --> 00:22:16,020
definition of the deadlock right you

422
00:22:16,020 --> 00:22:21,440
remember the definition uh sorry the um

423
00:22:21,840 --> 00:22:24,299
for dialogue to happen there's four

424
00:22:24,299 --> 00:22:26,880
conditions right you still remember any

425
00:22:26,880 --> 00:22:28,740
students still remember not just you

426
00:22:28,740 --> 00:22:31,220
want to find

427
00:22:32,880 --> 00:22:35,419
what about

428
00:22:35,700 --> 00:22:37,799
that conditions for a deadlock is mutual

429
00:22:37,799 --> 00:22:41,059
uh exclusion yeah

430
00:22:45,960 --> 00:22:49,320
exclusion can never occur because uh

431
00:22:49,320 --> 00:22:51,539
because one process can take something

432
00:22:51,539 --> 00:22:54,539
from another process while while it's

433
00:22:54,539 --> 00:22:57,360
holding and at that point you lose

434
00:22:57,360 --> 00:22:59,580
neutral exclusion which means no

435
00:22:59,580 --> 00:23:00,720
deadlines

436
00:23:00,720 --> 00:23:03,659
yeah uh

437
00:23:03,659 --> 00:23:06,320
freedom

438
00:23:07,799 --> 00:23:10,580
preemption

439
00:23:18,020 --> 00:23:21,120
and mutual exclusion right full

440
00:23:21,120 --> 00:23:22,860
condition so it's basically asking you

441
00:23:22,860 --> 00:23:24,900
this is low process is allowed to hold

442
00:23:24,900 --> 00:23:26,340
the resource while requesting another

443
00:23:26,340 --> 00:23:27,500
request

444
00:23:27,500 --> 00:23:30,600
it's asking like if one of those

445
00:23:30,600 --> 00:23:33,840
circumstances it's not

446
00:23:33,840 --> 00:23:36,600
satisfied then their look never occurred

447
00:23:36,600 --> 00:23:39,000
as a true okay so let's look at this

448
00:23:39,000 --> 00:23:42,900
okay a single choice questions okay

449
00:23:42,900 --> 00:23:45,780
oh this is CMC

450
00:23:45,780 --> 00:23:48,419
so that's the four conditions right so

451
00:23:48,419 --> 00:23:50,820
it's a c right it should be long

452
00:23:50,820 --> 00:23:52,200
preemption right it should be

453
00:23:52,200 --> 00:23:54,240
non-preemption

454
00:23:54,240 --> 00:23:56,760
so and which of the statements is true

455
00:23:56,760 --> 00:23:59,280
which of the statement is true

456
00:23:59,280 --> 00:24:02,179
but larger

457
00:24:03,299 --> 00:24:06,659
statement is true

458
00:24:06,659 --> 00:24:09,000
we talk about that right okay let's talk

459
00:24:09,000 --> 00:24:12,780
about that a model switch processes with

460
00:24:12,780 --> 00:24:16,580
process a contact switch

461
00:24:17,760 --> 00:24:20,700
we talk about that as a sailor is not

462
00:24:20,700 --> 00:24:22,980
here the Sailor specially we ask this

463
00:24:22,980 --> 00:24:24,960
question twice in the class

464
00:24:24,960 --> 00:24:27,720
in the yeah

465
00:24:27,720 --> 00:24:30,480
so we talk about that why why why

466
00:24:30,480 --> 00:24:33,059
are most which processor contact switch

467
00:24:33,059 --> 00:24:36,600
so to do contact switch you need to go

468
00:24:36,600 --> 00:24:38,520
into the kernel mode then you can do the

469
00:24:38,520 --> 00:24:40,860
contact switch so both switch always

470
00:24:40,860 --> 00:24:43,380
proceeds a contact switch

471
00:24:43,380 --> 00:24:46,380
you cannot do contact switch in the user

472
00:24:46,380 --> 00:24:49,200
mode like contact switch means the CPU

473
00:24:49,200 --> 00:24:51,840
is going to scheduling from one process

474
00:24:51,840 --> 00:24:54,360
to another process so it's involved for

475
00:24:54,360 --> 00:24:55,640
a lot of

476
00:24:55,640 --> 00:24:59,460
restricted operations that has to happen

477
00:24:59,460 --> 00:25:01,980
in the kernel mode

478
00:25:01,980 --> 00:25:03,120
so

479
00:25:03,120 --> 00:25:05,460
then that means we need to go to the

480
00:25:05,460 --> 00:25:09,679
kernel first to do a contact switch

481
00:25:09,960 --> 00:25:13,580
okay let's do this oh

482
00:25:15,480 --> 00:25:18,780
a computer has turned tape drives

483
00:25:18,780 --> 00:25:21,299
which unprocesses Computing for them

484
00:25:21,299 --> 00:25:24,600
each processor needs up to two drives we

485
00:25:24,600 --> 00:25:26,880
discussed that right we discussed the

486
00:25:26,880 --> 00:25:28,980
exactly same question okay so we are not

487
00:25:28,980 --> 00:25:31,440
going to discuss it again

488
00:25:31,440 --> 00:25:34,140
one needs to be saved and stored on a

489
00:25:34,140 --> 00:25:36,779
contact switch between two threads in

490
00:25:36,779 --> 00:25:39,179
the same process

491
00:25:39,179 --> 00:25:42,480
we need to save all of this we talk

492
00:25:42,480 --> 00:25:44,279
about that we talk about that in our

493
00:25:44,279 --> 00:25:46,559
review session with data okay to do a

494
00:25:46,559 --> 00:25:48,299
contact switch what we are going to do

495
00:25:48,299 --> 00:25:50,159
you need to

496
00:25:50,159 --> 00:25:53,460
save the status right the the program

497
00:25:53,460 --> 00:25:56,460
counter means that the

498
00:25:56,460 --> 00:25:59,880
it's a register right program counter is

499
00:25:59,880 --> 00:26:01,380
a register

500
00:26:01,380 --> 00:26:04,500
stack pointer is also a register it's

501
00:26:04,500 --> 00:26:06,779
also saving a register process or

502
00:26:06,779 --> 00:26:08,640
registers it's actually these two are

503
00:26:08,640 --> 00:26:11,220
belonging to process registers so it's

504
00:26:11,220 --> 00:26:13,520
actually everything everything

505
00:26:13,520 --> 00:26:18,120
these two are two specific registers

506
00:26:18,120 --> 00:26:20,400
there may be like some e like the

507
00:26:20,400 --> 00:26:23,880
instruction register IR right there's

508
00:26:23,880 --> 00:26:25,799
many registers

509
00:26:25,799 --> 00:26:29,220
so when we do a contact switch

510
00:26:29,220 --> 00:26:31,320
we need to save that but why connect

511
00:26:31,320 --> 00:26:33,659
switch in the threads are more

512
00:26:33,659 --> 00:26:35,580
lightweight because in the if we do

513
00:26:35,580 --> 00:26:37,919
contact switch for the stress we don't

514
00:26:37,919 --> 00:26:39,900
need to the same process

515
00:26:39,900 --> 00:26:42,419
they share the same virtual address

516
00:26:42,419 --> 00:26:43,559
space

517
00:26:43,559 --> 00:26:46,919
so that is much easier okay

518
00:26:46,919 --> 00:26:49,860
which of foreign is true of a blocking

519
00:26:49,860 --> 00:26:51,360
system

520
00:26:51,360 --> 00:26:53,299
Co-op

521
00:26:53,299 --> 00:26:56,640
broken system called let's see

522
00:26:56,640 --> 00:26:59,100
the application continue to execute this

523
00:26:59,100 --> 00:27:03,919
code One Core is issued

524
00:27:04,080 --> 00:27:06,480
a blocking system console is asking you

525
00:27:06,480 --> 00:27:08,880
the definition of the system core

526
00:27:08,880 --> 00:27:11,520
so the application continue to execute

527
00:27:11,520 --> 00:27:13,740
the code when the code is issued it is

528
00:27:13,740 --> 00:27:14,940
forced right

529
00:27:14,940 --> 00:27:19,740
you remember the other workflow is um

530
00:27:19,740 --> 00:27:22,440
in some slides in our in our

531
00:27:22,440 --> 00:27:25,039
introduction

532
00:27:25,080 --> 00:27:27,900
I forgot the size that slice number but

533
00:27:27,900 --> 00:27:31,860
it's it's in some page nine ten so like

534
00:27:31,860 --> 00:27:33,960
it shows you how to do the system core

535
00:27:33,960 --> 00:27:36,240
we also review that in our midterm

536
00:27:36,240 --> 00:27:38,820
review session so when we handle our

537
00:27:38,820 --> 00:27:40,500
system core

538
00:27:40,500 --> 00:27:44,159
the application gives the control

539
00:27:44,159 --> 00:27:47,520
to the OS then OS

540
00:27:47,520 --> 00:27:49,679
got a trap operation to the kernel

541
00:27:49,679 --> 00:27:52,260
hundred handled system course the

542
00:27:52,260 --> 00:27:55,620
application will not continue to execute

543
00:27:55,620 --> 00:27:58,679
the application continue executes after

544
00:27:58,679 --> 00:28:01,559
the call is issued and returned back

545
00:28:01,559 --> 00:28:04,500
remember that they also there is a trap

546
00:28:04,500 --> 00:28:07,380
there's a trap operation you look at the

547
00:28:07,380 --> 00:28:09,240
slides we have the picture about that

548
00:28:09,240 --> 00:28:12,120
the second the core returns immediately

549
00:28:12,120 --> 00:28:14,580
without waiting for Io to complete

550
00:28:14,580 --> 00:28:16,380
that's that's false right

551
00:28:16,380 --> 00:28:19,440
you need to wait in the core okay you

552
00:28:19,440 --> 00:28:21,360
need to wait in the i o to complete then

553
00:28:21,360 --> 00:28:23,279
return it the accusation of the

554
00:28:23,279 --> 00:28:25,080
application is suspended when the call

555
00:28:25,080 --> 00:28:27,900
is issued that's true right the

556
00:28:27,900 --> 00:28:30,120
application

557
00:28:30,120 --> 00:28:33,600
we we for example we open a file we open

558
00:28:33,600 --> 00:28:34,799
a file

559
00:28:34,799 --> 00:28:37,980
before we open a file the application is

560
00:28:37,980 --> 00:28:40,440
run the process is run then when we say

561
00:28:40,440 --> 00:28:43,080
the program counter points to the open

562
00:28:43,080 --> 00:28:45,539
the file the open operation then it's

563
00:28:45,539 --> 00:28:47,640
going to have a trap operation to the

564
00:28:47,640 --> 00:28:49,679
kernel from the user to the kernel modes

565
00:28:49,679 --> 00:28:52,200
and the kernel find out the Handler

566
00:28:52,200 --> 00:28:54,360
corresponding to that

567
00:28:54,360 --> 00:28:56,940
like to that Library System core and

568
00:28:56,940 --> 00:28:58,860
using uh

569
00:28:58,860 --> 00:29:00,960
the system called Handler to handle that

570
00:29:00,960 --> 00:29:03,720
so after it handle finish the code open

571
00:29:03,720 --> 00:29:06,419
operation open the file it may issues a

572
00:29:06,419 --> 00:29:09,419
page Force get a page from the disk and

573
00:29:09,419 --> 00:29:12,659
put it to the memory Creator memory

574
00:29:12,659 --> 00:29:15,600
are creates a memory space for that

575
00:29:15,600 --> 00:29:18,179
application and then return the control

576
00:29:18,179 --> 00:29:21,240
to the application in the user mode so

577
00:29:21,240 --> 00:29:23,100
the execution of the application is

578
00:29:23,100 --> 00:29:25,740
suspended when the call is issued

579
00:29:25,740 --> 00:29:28,020
blocking application code is harder to

580
00:29:28,020 --> 00:29:30,240
understand

581
00:29:30,240 --> 00:29:33,679
the long broken

582
00:29:34,039 --> 00:29:36,840
application code is harder to understand

583
00:29:36,840 --> 00:29:40,159
the noun

584
00:29:40,700 --> 00:29:44,220
okay that's that's false

585
00:29:44,220 --> 00:29:46,919
so let's do this oh this is something a

586
00:29:46,919 --> 00:29:51,620
little tricky how many of you guys see

587
00:29:52,380 --> 00:29:54,480
how many of you guys see if you follow

588
00:29:54,480 --> 00:29:57,840
the formula you are gonna see right if

589
00:29:57,840 --> 00:30:00,000
you follow the formula it's gonna see by

590
00:30:00,000 --> 00:30:03,320
the crush on the is

591
00:30:04,820 --> 00:30:08,039
great great then Andrew can you explain

592
00:30:08,039 --> 00:30:11,059
why it is the

593
00:30:22,340 --> 00:30:25,320
for the formula is asking the CPU

594
00:30:25,320 --> 00:30:27,840
utilization right it asks you the CPU

595
00:30:27,840 --> 00:30:29,940
utilization then here the question

596
00:30:29,940 --> 00:30:32,600
answer question asks you

597
00:30:32,600 --> 00:30:35,820
what fraction of the CPU time is wasted

598
00:30:35,820 --> 00:30:37,980
it asks you what fraction of the CPU

599
00:30:37,980 --> 00:30:39,779
time is wasted it does not ask you the

600
00:30:39,779 --> 00:30:41,700
CPU utilization so you need to

601
00:30:41,700 --> 00:30:44,059
distinguish between CPU visualization

602
00:30:44,059 --> 00:30:47,880
and the CPU idle time so if the CPU

603
00:30:47,880 --> 00:30:49,980
utilization is 19 percentage then that

604
00:30:49,980 --> 00:30:51,840
means the CPU

605
00:30:51,840 --> 00:30:54,240
10 percentage of the CPU time is wasted

606
00:30:54,240 --> 00:30:57,600
so do not hardly memorize the formula

607
00:30:57,600 --> 00:31:00,600
try to understand that then you can get

608
00:31:00,600 --> 00:31:03,299
a correct answer okay the formula is

609
00:31:03,299 --> 00:31:04,700
asking you

610
00:31:04,700 --> 00:31:07,620
the CPU utilization means like which

611
00:31:07,620 --> 00:31:11,100
fraction the CPU is used but here it

612
00:31:11,100 --> 00:31:13,200
asks you what fraction of the CPU is

613
00:31:13,200 --> 00:31:15,539
wasted is idle

614
00:31:15,539 --> 00:31:18,059
right

615
00:31:18,059 --> 00:31:20,520
all right okay so this this one we we

616
00:31:20,520 --> 00:31:23,960
discussed that right we

617
00:31:25,559 --> 00:31:27,539
so the event is not that difficult

618
00:31:27,539 --> 00:31:29,720
because we discussed so many

619
00:31:29,720 --> 00:31:32,700
questions already in the lecture so how

620
00:31:32,700 --> 00:31:34,860
many philosophies may eat simultaneously

621
00:31:34,860 --> 00:31:36,659
in the dining philosophy program with

622
00:31:36,659 --> 00:31:38,820
seven philosophies

623
00:31:38,820 --> 00:31:40,919
um

624
00:31:40,919 --> 00:31:43,980
we have like so so it's you can write a

625
00:31:43,980 --> 00:31:47,580
picture and then it can give you okay

626
00:31:47,580 --> 00:31:49,679
okay this one this one this one is

627
00:31:49,679 --> 00:31:51,720
tricky this one is tricky

628
00:31:51,720 --> 00:31:54,059
so onion students know how to do this

629
00:31:54,059 --> 00:31:57,120
one this one is tricky this is maybe the

630
00:31:57,120 --> 00:31:58,320
hardest step

631
00:31:58,320 --> 00:32:01,580
part in this

632
00:32:02,580 --> 00:32:04,320
so you want to spend some time to do

633
00:32:04,320 --> 00:32:05,520
that

634
00:32:05,520 --> 00:32:08,539
you don't remember remember

635
00:32:13,140 --> 00:32:16,140
yes

636
00:32:35,700 --> 00:32:38,460
yeah yeah it's very good very good he

637
00:32:38,460 --> 00:32:40,500
gives us an intuition how to solve this

638
00:32:40,500 --> 00:32:43,860
problem you need to you well we we take

639
00:32:43,860 --> 00:32:47,100
a look at this and see whether it is the

640
00:32:47,100 --> 00:32:49,020
first thing first serve what is shortage

641
00:32:49,020 --> 00:32:50,700
job what is around Robin and what is so

642
00:32:50,700 --> 00:32:52,460
we can use some

643
00:32:52,460 --> 00:32:55,740
the removing the solution removing the

644
00:32:55,740 --> 00:32:58,559
incorrect solution first then the last

645
00:32:58,559 --> 00:33:03,120
one is the correct solution yeah

646
00:33:08,600 --> 00:33:12,240
yes yes very good so why just run around

647
00:33:12,240 --> 00:33:13,980
Robin we can see that it's not running

648
00:33:13,980 --> 00:33:16,500
the same time right it's not running the

649
00:33:16,500 --> 00:33:18,480
same time so it's definitely not round

650
00:33:18,480 --> 00:33:20,700
robin right so round robin would say the

651
00:33:20,700 --> 00:33:23,100
same column the same column always the

652
00:33:23,100 --> 00:33:27,360
same pattern now we see oh

653
00:33:27,360 --> 00:33:30,299
whether it is uh first thing versus

654
00:33:30,299 --> 00:33:33,600
first serve it's not service first thing

655
00:33:33,600 --> 00:33:35,700
first serve or what is first thing for

656
00:33:35,700 --> 00:33:37,980
service not right because you see this

657
00:33:37,980 --> 00:33:39,600
is God

658
00:33:39,600 --> 00:33:42,120
this is not finished all right it's not

659
00:33:42,120 --> 00:33:44,399
finished it's not finished

660
00:33:44,399 --> 00:33:45,659
right

661
00:33:45,659 --> 00:33:48,360
now weather is the shortest job first

662
00:33:48,360 --> 00:33:50,880
why it is not the shortest job first

663
00:33:50,880 --> 00:33:53,700
then we need to look at this okay assume

664
00:33:53,700 --> 00:33:55,740
a process P0 needs five Circle to

665
00:33:55,740 --> 00:34:00,000
terminate and uh requests on iO three

666
00:34:00,000 --> 00:34:02,100
circles P0 okay and there's another

667
00:34:02,100 --> 00:34:04,919
process py in the same radical in the

668
00:34:04,919 --> 00:34:06,960
same radical so they are arriving you

669
00:34:06,960 --> 00:34:09,000
can see they are arriving almost at the

670
00:34:09,000 --> 00:34:10,859
same time they are in the same radical

671
00:34:10,859 --> 00:34:12,899
so if they are in the same graphic queue

672
00:34:12,899 --> 00:34:14,339
then the CPU needs to figure out okay

673
00:34:14,339 --> 00:34:17,580
who got it first and it's only requires

674
00:34:17,580 --> 00:34:21,359
five CPU Cycles to terminate so if we

675
00:34:21,359 --> 00:34:24,719
can see this timeline for p what P0 and

676
00:34:24,719 --> 00:34:27,599
P1 you know if P0 and P1 so if it is

677
00:34:27,599 --> 00:34:29,460
first circum versus serve then we

678
00:34:29,460 --> 00:34:35,000
definitely need to finish P0 P0

679
00:34:35,040 --> 00:34:39,960
um P0 first and then P1 right and

680
00:34:39,960 --> 00:34:43,859
let's say if the shortest job so why why

681
00:34:43,859 --> 00:34:47,960
it has not shot his job first let's see

682
00:35:05,599 --> 00:35:08,280
about more Cycles than that and it's

683
00:35:08,280 --> 00:35:10,820
switching to that

684
00:35:27,260 --> 00:35:30,180
yes yes yes yes very good so it's

685
00:35:30,180 --> 00:35:33,180
already uh very tricky here okay so for

686
00:35:33,180 --> 00:35:34,920
this question we need to why we just

687
00:35:34,920 --> 00:35:37,579
look at this we look at this through to

688
00:35:37,579 --> 00:35:40,920
removing the incorrect answers okay so

689
00:35:40,920 --> 00:35:41,880
let's

690
00:35:41,880 --> 00:35:44,640
which of the following is most likely to

691
00:35:44,640 --> 00:35:46,740
be a system call

692
00:35:46,740 --> 00:35:49,020
the implementation of a while loop in C

693
00:35:49,020 --> 00:35:52,140
that is not a system core right that is

694
00:35:52,140 --> 00:35:55,280
a user user in the user in the user mode

695
00:35:55,280 --> 00:36:00,119
parser token from a stream is just uh

696
00:36:00,119 --> 00:36:05,040
it's it's not a system core right gather

697
00:36:05,040 --> 00:36:08,520
this is this is a mass Library this is a

698
00:36:08,520 --> 00:36:09,800
tax

699
00:36:09,800 --> 00:36:12,000
processing library right the

700
00:36:12,000 --> 00:36:14,339
implementation of all right Loop in C so

701
00:36:14,339 --> 00:36:17,099
you can see this if you can see why when

702
00:36:17,099 --> 00:36:20,160
it when it become a system core that

703
00:36:20,160 --> 00:36:22,200
means you need to have those kernel

704
00:36:22,200 --> 00:36:24,180
modes to process there then that is the

705
00:36:24,180 --> 00:36:26,400
system core so if you look at this

706
00:36:26,400 --> 00:36:28,440
gather time of the day

707
00:36:28,440 --> 00:36:31,740
we actually discussed that like but I'm

708
00:36:31,740 --> 00:36:34,200
not using the same term I'm saying like

709
00:36:34,200 --> 00:36:37,560
can we change the clock in our laptop we

710
00:36:37,560 --> 00:36:39,420
cannot change that so that's the same

711
00:36:39,420 --> 00:36:41,640
thing as The Gather time of the day you

712
00:36:41,640 --> 00:36:43,020
cannot

713
00:36:43,020 --> 00:36:45,900
since you cannot change the clock of the

714
00:36:45,900 --> 00:36:48,180
timing right in the computer you cannot

715
00:36:48,180 --> 00:36:50,460
change that same thing the time the

716
00:36:50,460 --> 00:36:53,880
timer the timer the uh of your computer

717
00:36:53,880 --> 00:36:57,060
is is controlled by the by this by the

718
00:36:57,060 --> 00:36:59,339
OS but OS it's a resource it's a

719
00:36:59,339 --> 00:37:03,079
resource it's controlled by the OS

720
00:37:03,200 --> 00:37:05,940
discussion in a review session I ask you

721
00:37:05,940 --> 00:37:08,160
like can we change the

722
00:37:08,160 --> 00:37:12,240
clock of the of the of your laptop we

723
00:37:12,240 --> 00:37:14,220
sell node right that's the

724
00:37:14,220 --> 00:37:16,619
so this is a system so regarding the

725
00:37:16,619 --> 00:37:18,720
differences between preemptive and

726
00:37:18,720 --> 00:37:21,420
non-preemptive schedule which is true

727
00:37:21,420 --> 00:37:25,200
pre and pre preemptive non-line

728
00:37:25,200 --> 00:37:30,140
preemptive Gathering which one is true

729
00:37:33,480 --> 00:37:35,760
of the buff right

730
00:37:35,760 --> 00:37:39,180
of the buff right so it's actually the

731
00:37:39,180 --> 00:37:42,380
playing preemption scheduling preemption

732
00:37:42,380 --> 00:37:44,940
allows the process to be interrupt in

733
00:37:44,940 --> 00:37:47,300
the Middle East of its execution

734
00:37:47,300 --> 00:37:49,440
non-preemptive scheduling shoulder

735
00:37:49,440 --> 00:37:51,359
process

736
00:37:51,359 --> 00:37:53,099
give the control

737
00:37:53,099 --> 00:37:55,500
of the CPU only minds finished with its

738
00:37:55,500 --> 00:37:58,460
current CPU first

739
00:38:00,599 --> 00:38:02,460
there's another short answer she answers

740
00:38:02,460 --> 00:38:04,020
were very

741
00:38:04,020 --> 00:38:06,839
easy it's come from your homework so if

742
00:38:06,839 --> 00:38:09,300
you do your homework you should be good

743
00:38:09,300 --> 00:38:12,300
or from your homework

744
00:38:12,300 --> 00:38:14,880
so name three ways in the process can

745
00:38:14,880 --> 00:38:17,099
transition from user mode to Kernel mode

746
00:38:17,099 --> 00:38:19,800
I will be very nice for this question so

747
00:38:19,800 --> 00:38:21,060
if you

748
00:38:21,060 --> 00:38:23,700
if you just make three examples it

749
00:38:23,700 --> 00:38:25,680
should be fine you should get a grades

750
00:38:25,680 --> 00:38:26,520
okay

751
00:38:26,520 --> 00:38:31,400
but here this is the example solution

752
00:38:35,820 --> 00:38:38,400
let's see so this one this one what's

753
00:38:38,400 --> 00:38:40,440
the differences between dialogue and the

754
00:38:40,440 --> 00:38:42,119
starvation

755
00:38:42,119 --> 00:38:44,280
actually mentioned that in a client of

756
00:38:44,280 --> 00:38:46,260
the lectures that are the dialogue and

757
00:38:46,260 --> 00:38:48,240
starvation in a dialogue situation

758
00:38:48,240 --> 00:38:50,460
nonflow involved process can possibly

759
00:38:50,460 --> 00:38:52,980
make progress in a starvation situation

760
00:38:52,980 --> 00:38:55,260
process is ready to ask you but it's not

761
00:38:55,260 --> 00:38:58,740
being allowed to execute so dialogue in

762
00:38:58,740 --> 00:39:00,420
the dialogue situation it means that

763
00:39:00,420 --> 00:39:03,380
it's going to be

764
00:39:04,440 --> 00:39:05,160
um

765
00:39:05,160 --> 00:39:08,579
you need to you need to you need also to

766
00:39:08,579 --> 00:39:10,619
answer this question correctly you need

767
00:39:10,619 --> 00:39:12,480
to give the definition about what is the

768
00:39:12,480 --> 00:39:15,540
dialog and what is starvation and the

769
00:39:15,540 --> 00:39:18,780
difference is that that in the

770
00:39:18,780 --> 00:39:21,900
starvation situation process is ready to

771
00:39:21,900 --> 00:39:25,079
ask you it's ready to execute

772
00:39:25,079 --> 00:39:27,420
so it's ready to argue but insteadlock

773
00:39:27,420 --> 00:39:29,880
situation it's not because it does not

774
00:39:29,880 --> 00:39:33,060
have the resources that it wants it's

775
00:39:33,060 --> 00:39:35,099
not in the ready it's not in the very

776
00:39:35,099 --> 00:39:38,099
status

777
00:39:38,220 --> 00:39:40,740
okay and then what is the contact switch

778
00:39:40,740 --> 00:39:43,079
what is the contact switch

779
00:39:43,079 --> 00:39:46,859
well I will give you a hint okay

780
00:39:46,859 --> 00:39:49,740
the midterm questions May repeat in the

781
00:39:49,740 --> 00:39:51,780
final so in the final we are going to be

782
00:39:51,780 --> 00:39:54,180
cumulative we are going to be cumulative

783
00:39:54,180 --> 00:39:55,920
so

784
00:39:55,920 --> 00:39:57,359
um

785
00:39:57,359 --> 00:39:59,160
so try to pay attention to that okay

786
00:39:59,160 --> 00:40:01,619
what is contact switch transforming

787
00:40:01,619 --> 00:40:03,240
control from one process to other

788
00:40:03,240 --> 00:40:06,359
process so if if you if I want you if

789
00:40:06,359 --> 00:40:08,099
I'm not going to

790
00:40:08,099 --> 00:40:09,960
um if I feel difficult to answer this

791
00:40:09,960 --> 00:40:11,640
what is context video I can actually

792
00:40:11,640 --> 00:40:14,579
find a solution in this

793
00:40:14,579 --> 00:40:20,099
right you can find some Solutions in a

794
00:40:20,099 --> 00:40:23,760
in in enough true force or the multiple

795
00:40:23,760 --> 00:40:25,800
choice questions there are there are

796
00:40:25,800 --> 00:40:27,720
some definition about the context switch

797
00:40:27,720 --> 00:40:30,420
okay so it's transferring control from

798
00:40:30,420 --> 00:40:32,339
one process to another request same in

799
00:40:32,339 --> 00:40:34,079
the state of the pro our process and

800
00:40:34,079 --> 00:40:36,359
loading the safer States from new

801
00:40:36,359 --> 00:40:38,940
process so we are going to save all the

802
00:40:38,940 --> 00:40:41,640
process registers from the old process

803
00:40:41,640 --> 00:40:46,700
and load the saved States saved projects

804
00:40:46,700 --> 00:40:50,700
process registers value

805
00:40:50,700 --> 00:40:53,880
what is the meal tax your taxes are

806
00:40:53,880 --> 00:40:56,820
locked it's a program object that allows

807
00:40:56,820 --> 00:40:58,339
multiple

808
00:40:58,339 --> 00:41:00,599
programs right to share the same

809
00:41:00,599 --> 00:41:02,579
resource such as file sets but not

810
00:41:02,579 --> 00:41:05,820
simultaneously so someone is an integer

811
00:41:05,820 --> 00:41:07,859
a valuable data apart from

812
00:41:07,859 --> 00:41:09,480
initialization

813
00:41:09,480 --> 00:41:12,720
is to standard atomic operations down

814
00:41:12,720 --> 00:41:14,280
and up

815
00:41:14,280 --> 00:41:16,680
we have that solution in the uh in the

816
00:41:16,680 --> 00:41:21,560
slides right okay so let's look at this

817
00:41:24,960 --> 00:41:28,260
oh I should not give you this okay

818
00:41:28,260 --> 00:41:32,060
is true or false this one

819
00:41:33,060 --> 00:41:35,839
true or first

820
00:41:40,200 --> 00:41:44,400
what where's my out there most operating

821
00:41:44,400 --> 00:41:46,260
systems are designed for general purpose

822
00:41:46,260 --> 00:41:49,020
computation a proposal has been put

823
00:41:49,020 --> 00:41:51,240
forth for OS that is optimized for

824
00:41:51,240 --> 00:41:54,119
running Mass intensive programs in Mass

825
00:41:54,119 --> 00:41:57,900
OS so someone is proposing Mass OS it's

826
00:41:57,900 --> 00:41:59,099
like your

827
00:41:59,099 --> 00:42:00,740
Apple OS

828
00:42:00,740 --> 00:42:03,480
the kernel includes the system core from

829
00:42:03,480 --> 00:42:06,060
many useful mathematical operations such

830
00:42:06,060 --> 00:42:08,240
as metrics

831
00:42:08,240 --> 00:42:12,440
like this audience like Eed or maybe

832
00:42:12,440 --> 00:42:14,940
that's all functions this system called

833
00:42:14,940 --> 00:42:17,099
writing in highly optimized assembling

834
00:42:17,099 --> 00:42:19,619
language for maximum performance is this

835
00:42:19,619 --> 00:42:21,900
concept for mass or I think it's a good

836
00:42:21,900 --> 00:42:23,579
idea

837
00:42:23,579 --> 00:42:27,260
is it a good idea Andrew

838
00:42:34,920 --> 00:42:37,380
this is a for

839
00:42:37,380 --> 00:42:39,480
um easy right

840
00:42:39,480 --> 00:42:41,160
what's your name

841
00:42:41,160 --> 00:42:44,839
Madre who is easy

842
00:42:57,660 --> 00:43:00,720
it's very good so yeah let's combined to

843
00:43:00,720 --> 00:43:04,380
students are answers so you think of the

844
00:43:04,380 --> 00:43:09,119
OS why we need the OS the OS the common

845
00:43:09,119 --> 00:43:11,520
parts of the OS is in the kernel modes

846
00:43:11,520 --> 00:43:13,980
right so basically It'll ask you that we

847
00:43:13,980 --> 00:43:16,980
put the mass operations in the kernel we

848
00:43:16,980 --> 00:43:18,960
put some math operations in the kernel

849
00:43:18,960 --> 00:43:21,180
that's not a good idea because you're

850
00:43:21,180 --> 00:43:23,579
going well what the kernel the job of

851
00:43:23,579 --> 00:43:25,920
the kernel is to do the

852
00:43:25,920 --> 00:43:28,160
obstruction and the resource management

853
00:43:28,160 --> 00:43:31,200
especially to protect the important

854
00:43:31,200 --> 00:43:33,780
Hardware resources so that's why when we

855
00:43:33,780 --> 00:43:35,700
say kernel operation is almost relating

856
00:43:35,700 --> 00:43:36,660
to

857
00:43:36,660 --> 00:43:39,060
resource like the memory resource like

858
00:43:39,060 --> 00:43:41,640
paging right page Replacements or the

859
00:43:41,640 --> 00:43:44,700
process process scheduling almost every

860
00:43:44,700 --> 00:43:47,160
kernel operation is relating to an

861
00:43:47,160 --> 00:43:49,800
important resource of the or of the

862
00:43:49,800 --> 00:43:51,900
system like the hardware like the uh

863
00:43:51,900 --> 00:43:53,940
when we learn file system we will select

864
00:43:53,940 --> 00:43:56,220
open Creator file this relating to the

865
00:43:56,220 --> 00:43:58,619
disk a disk obstruction the block

866
00:43:58,619 --> 00:43:59,640
address

867
00:43:59,640 --> 00:44:01,920
so almost every kernel operation is

868
00:44:01,920 --> 00:44:04,560
relating to a hardware the mathematics

869
00:44:04,560 --> 00:44:07,380
does not relating to any hardware right

870
00:44:07,380 --> 00:44:10,980
so it's very inefficient okay well not

871
00:44:10,980 --> 00:44:13,319
bad if it's running they do not need a

872
00:44:13,319 --> 00:44:15,780
privileged instructions or special

873
00:44:15,780 --> 00:44:17,579
facilities you can say the special

874
00:44:17,579 --> 00:44:20,339
Hardwares okay

875
00:44:20,339 --> 00:44:23,819
it does not need privileged instructions

876
00:44:23,819 --> 00:44:26,160
it does not need privileged instructions

877
00:44:26,160 --> 00:44:28,079
it also does not need any special

878
00:44:28,079 --> 00:44:30,900
facilities like special Hardware you can

879
00:44:30,900 --> 00:44:35,040
do around anything with just using

880
00:44:35,040 --> 00:44:37,800
the common resource

881
00:44:37,800 --> 00:44:40,319
okay so the answer is no okay the answer

882
00:44:40,319 --> 00:44:43,920
is no let's look at this oh okay at the

883
00:44:43,920 --> 00:44:46,319
beginning of it I downloaded so I think

884
00:44:46,319 --> 00:44:49,280
there's a type of

885
00:44:53,400 --> 00:44:55,260
so at the beginning of calling the

886
00:44:55,260 --> 00:44:57,900
lockdown I download 100 megabytes of

887
00:44:57,900 --> 00:45:00,780
large directory of high resolution Zoom

888
00:45:00,780 --> 00:45:02,160
background image from the University

889
00:45:02,160 --> 00:45:05,040
website and add it to the zoom clients

890
00:45:05,040 --> 00:45:08,099
on my computer computer now whenever I

891
00:45:08,099 --> 00:45:10,440
open the settings tab in the zoom and

892
00:45:10,440 --> 00:45:13,920
try to go to the virtual background tab

893
00:45:13,920 --> 00:45:16,440
where approval of the old image will be

894
00:45:16,440 --> 00:45:19,220
shown my zoom clients appear to

895
00:45:19,220 --> 00:45:23,060
store hunts there and the UI becomes

896
00:45:23,060 --> 00:45:25,500
unresponsible for almost half minutes

897
00:45:25,500 --> 00:45:27,300
before the image finally appear in the

898
00:45:27,300 --> 00:45:29,599
UI this very alarming situation

899
00:45:29,599 --> 00:45:33,740
situation be thinking about

900
00:45:34,800 --> 00:45:38,940
make me thinking of making me makes me

901
00:45:38,940 --> 00:45:42,060
that's a typo thinking about the process

902
00:45:42,060 --> 00:45:47,720
States so while the zoom clients is long

903
00:45:47,720 --> 00:45:50,819
unresponsible word process States is

904
00:45:50,819 --> 00:45:52,220
most likely

905
00:45:52,220 --> 00:45:55,260
justify your high persist so it's very

906
00:45:55,260 --> 00:45:58,079
important you need to justify that

907
00:45:58,079 --> 00:46:01,880
any student think they're running

908
00:46:02,460 --> 00:46:04,440
so it's like the client the zoom client

909
00:46:04,440 --> 00:46:06,599
so basically it's asking okay

910
00:46:06,599 --> 00:46:09,540
I open a zoom clients but I couldn't

911
00:46:09,540 --> 00:46:12,960
open this like in a lot it's like hands

912
00:46:12,960 --> 00:46:14,180
there hunts there forever

913
00:46:14,180 --> 00:46:17,819
non-responsible so what process this is

914
00:46:17,819 --> 00:46:21,119
the zoom most likely in

915
00:46:21,119 --> 00:46:23,940
running ready or blocked

916
00:46:23,940 --> 00:46:27,420
and you need to justify your answer

917
00:46:27,420 --> 00:46:30,079
yes

918
00:46:30,420 --> 00:46:32,819
you think it's blocked okay so how to

919
00:46:32,819 --> 00:46:36,800
justify that why it's blocked

920
00:47:02,400 --> 00:47:07,920
it's not it's not any of this is working

921
00:47:17,099 --> 00:47:18,480
then a system caller you have to go to

922
00:47:18,480 --> 00:47:21,060
IO to get that file and

923
00:47:21,060 --> 00:47:24,420
that that I O call will put like we'll

924
00:47:24,420 --> 00:47:26,040
put that we'll put the process into

925
00:47:26,040 --> 00:47:28,500
velocity so how to justify your

926
00:47:28,500 --> 00:47:31,380
hypothesis hypothesis so sync is a block

927
00:47:31,380 --> 00:47:33,480
but it's all from your assumption right

928
00:47:33,480 --> 00:47:35,760
how you justify that how can you find

929
00:47:35,760 --> 00:47:37,680
out whether it's blocked state or not

930
00:47:37,680 --> 00:47:38,579
yeah

931
00:47:38,579 --> 00:47:40,440
while I haven't heard a better answer

932
00:47:40,440 --> 00:47:42,599
for this I wrote that it's task manager

933
00:47:42,599 --> 00:47:44,400
just or just use task manager it should

934
00:47:44,400 --> 00:47:45,780
tell you

935
00:47:45,780 --> 00:47:48,359
very good use pasta manager in the task

936
00:47:48,359 --> 00:47:50,880
manager you can see what the CPU

937
00:47:50,880 --> 00:47:53,160
utilization right in the task manager

938
00:47:53,160 --> 00:47:56,220
you can see ccpu utilization so if it is

939
00:47:56,220 --> 00:47:58,740
a running stage you are going to see a

940
00:47:58,740 --> 00:48:00,839
CPU utilize anyone thinks it's a running

941
00:48:00,839 --> 00:48:02,579
state

942
00:48:02,579 --> 00:48:05,160
if it's a block stage we will see a CPU

943
00:48:05,160 --> 00:48:08,240
utilization of

944
00:48:08,940 --> 00:48:11,900
Magic

945
00:48:14,400 --> 00:48:17,099
very good if in the block States then

946
00:48:17,099 --> 00:48:19,980
that means the zoom is waiting for your

947
00:48:19,980 --> 00:48:22,619
i o input so we say that we download a

948
00:48:22,619 --> 00:48:25,440
very big image right it may needs to

949
00:48:25,440 --> 00:48:28,500
gather image it's doing some IO job and

950
00:48:28,500 --> 00:48:31,680
then so to prove that I'm correct using

951
00:48:31,680 --> 00:48:34,440
block stage I click I open the task

952
00:48:34,440 --> 00:48:38,460
manager and to see check that if I see a

953
00:48:38,460 --> 00:48:40,680
loan supervisation then that means it's

954
00:48:40,680 --> 00:48:43,619
block sticks but it may can it can also

955
00:48:43,619 --> 00:48:44,700
in a

956
00:48:44,700 --> 00:48:47,700
running space right now also in running

957
00:48:47,700 --> 00:48:49,380
States

958
00:48:49,380 --> 00:48:53,220
right it's so it's most likely in the

959
00:48:53,220 --> 00:48:56,040
running stage in learning stage I would

960
00:48:56,040 --> 00:48:58,339
rarely find that by just looking at the

961
00:48:58,339 --> 00:49:00,420
superiorization if in the running state

962
00:49:00,420 --> 00:49:02,099
so I would check the answers like this

963
00:49:02,099 --> 00:49:04,380
if you say running stage you say the CPU

964
00:49:04,380 --> 00:49:06,660
utilization is 100 percentage you check

965
00:49:06,660 --> 00:49:08,819
the CPU utilization you do not need to

966
00:49:08,819 --> 00:49:10,680
say you open the task manager there's

967
00:49:10,680 --> 00:49:13,680
many tools that can help you look at the

968
00:49:13,680 --> 00:49:16,319
CPU utilization but you need to mention

969
00:49:16,319 --> 00:49:18,359
that that is how you justify your answer

970
00:49:18,359 --> 00:49:21,960
okay if it's in the block States if in

971
00:49:21,960 --> 00:49:23,880
the block States then that is trying to

972
00:49:23,880 --> 00:49:28,400
get some you waiting on UI inputs right

973
00:49:28,680 --> 00:49:31,020
contact the remote server with a very

974
00:49:31,020 --> 00:49:33,839
low process time response time okay so

975
00:49:33,839 --> 00:49:37,380
that is how we uh how we how we um

976
00:49:37,380 --> 00:49:40,680
how we justify that okay

977
00:49:40,680 --> 00:49:43,859
let's look at this next another

978
00:49:43,859 --> 00:49:45,839
oh we got this right

979
00:49:45,839 --> 00:49:49,319
so we do not need to repeat that right

980
00:49:49,319 --> 00:49:52,079
we already discarded in our class right

981
00:49:52,079 --> 00:49:57,380
we we do not need to repeat that so

982
00:50:01,859 --> 00:50:04,260
okay the coding versions okay coding

983
00:50:04,260 --> 00:50:06,440
questions

984
00:50:06,440 --> 00:50:09,660
okay for sample solution so you take a

985
00:50:09,660 --> 00:50:11,700
look at that

986
00:50:11,700 --> 00:50:13,380
um

987
00:50:13,380 --> 00:50:15,720
well the thing is that for the midterm

988
00:50:15,720 --> 00:50:18,119
if we look at the tips what you can

989
00:50:18,119 --> 00:50:19,920
learn from midterm if you do not perform

990
00:50:19,920 --> 00:50:22,380
well in the midterm that's okay no need

991
00:50:22,380 --> 00:50:24,660
to vary we are going to curve the grades

992
00:50:24,660 --> 00:50:26,599
if you do not perform well

993
00:50:26,599 --> 00:50:30,480
others may not perform well too so we

994
00:50:30,480 --> 00:50:32,579
are going to curve that and but I'm I'm

995
00:50:32,579 --> 00:50:35,099
going to after I got all the grades I'm

996
00:50:35,099 --> 00:50:38,460
going to tell you what's the average

997
00:50:38,460 --> 00:50:40,500
um it's medium what the medium what's

998
00:50:40,500 --> 00:50:42,359
the standard deviation

999
00:50:42,359 --> 00:50:45,660
um yeah I'm not allowed to to tell you

1000
00:50:45,660 --> 00:50:48,420
the uh the worst grades but I can tell

1001
00:50:48,420 --> 00:50:51,780
you the best grades in class that sounds

1002
00:50:51,780 --> 00:50:54,540
fair so you can have a

1003
00:50:54,540 --> 00:50:56,640
understanding about where you may stand

1004
00:50:56,640 --> 00:50:59,280
in class

1005
00:50:59,280 --> 00:51:01,640
okay

1006
00:51:04,380 --> 00:51:07,280
and uh

1007
00:51:10,800 --> 00:51:13,380
um what else yeah in the final we are

1008
00:51:13,380 --> 00:51:15,380
going to have

1009
00:51:15,380 --> 00:51:17,700
accumulative so it's going to cover

1010
00:51:17,700 --> 00:51:19,740
everything cover everything it will be

1011
00:51:19,740 --> 00:51:21,900
the same style same the true false

1012
00:51:21,900 --> 00:51:22,980
questions

1013
00:51:22,980 --> 00:51:25,440
single choice questions and there are

1014
00:51:25,440 --> 00:51:28,980
short answers with some

1015
00:51:28,980 --> 00:51:31,079
short answers so it should answers it

1016
00:51:31,079 --> 00:51:33,300
should be very easy to prepare or you

1017
00:51:33,300 --> 00:51:34,920
just need to go over your homework

1018
00:51:34,920 --> 00:51:37,980
because our homework will have many uh

1019
00:51:37,980 --> 00:51:41,579
ask you many definitions of the OS so

1020
00:51:41,579 --> 00:51:44,300
your short answers

1021
00:51:48,059 --> 00:51:50,040
so is that I kind of wish that before

1022
00:51:50,040 --> 00:51:52,980
the before the midterm you gave us the

1023
00:51:52,980 --> 00:51:54,780
like I guess it might have been

1024
00:51:54,780 --> 00:51:56,640
stressful but it was stressful but it

1025
00:51:56,640 --> 00:51:58,140
might have helped if you gave us some of

1026
00:51:58,140 --> 00:52:00,240
these uh and I guess some some people

1027
00:52:00,240 --> 00:52:02,040
response might hate me for this but I

1028
00:52:02,040 --> 00:52:03,480
feel like if you gave us the if you

1029
00:52:03,480 --> 00:52:05,280
assigned the homeworks or like made the

1030
00:52:05,280 --> 00:52:07,020
view before the midterm then we can kind

1031
00:52:07,020 --> 00:52:08,760
of have an understanding of what we did

1032
00:52:08,760 --> 00:52:11,460
right and wrong so then we could oh yeah

1033
00:52:11,460 --> 00:52:13,020
yeah

1034
00:52:13,020 --> 00:52:15,540
so can you

1035
00:52:15,540 --> 00:52:17,160
can you make um the next two assignments

1036
00:52:17,160 --> 00:52:19,319
are due or like at least assigned before

1037
00:52:19,319 --> 00:52:21,660
the finals yeah yeah that's my yeah

1038
00:52:21,660 --> 00:52:24,900
that's my bad yeah because um my tea um

1039
00:52:24,900 --> 00:52:27,780
yeah the ti got delayed on that so I'm

1040
00:52:27,780 --> 00:52:29,420
going to release the homework

1041
00:52:29,420 --> 00:52:33,000
assignments soon like the file systems a

1042
00:52:33,000 --> 00:52:35,160
memory I'm going to release it this week

1043
00:52:35,160 --> 00:52:37,020
all the all the homework the file

1044
00:52:37,020 --> 00:52:38,520
systems the memory and the

1045
00:52:38,520 --> 00:52:40,740
virtualization we have three chapters

1046
00:52:40,740 --> 00:52:43,079
left system virtualization file system

1047
00:52:43,079 --> 00:52:45,300
and memory our going to release that in

1048
00:52:45,300 --> 00:52:48,480
one day but you have the uh you have

1049
00:52:48,480 --> 00:52:51,059
each of them you have like two weeks to

1050
00:52:51,059 --> 00:52:53,579
finish okay so um

1051
00:52:53,579 --> 00:52:55,619
so but I will release that earlier I

1052
00:52:55,619 --> 00:52:57,059
will definitely release the lower levels

1053
00:52:57,059 --> 00:52:58,380
thank you for the suggestion that's a

1054
00:52:58,380 --> 00:53:01,160
very good comment

1055
00:53:02,220 --> 00:53:05,059
uh

1056
00:53:06,780 --> 00:53:09,859
okay so um

1057
00:53:13,920 --> 00:53:15,960
do you feel the time is in love for

1058
00:53:15,960 --> 00:53:18,359
midterm

1059
00:53:18,359 --> 00:53:21,079
the time is in love

1060
00:53:21,079 --> 00:53:23,640
okay okay then that's good that's good

1061
00:53:23,640 --> 00:53:25,260
because in the final we'll have more

1062
00:53:25,260 --> 00:53:27,559
time

1063
00:53:28,380 --> 00:53:31,200
it will be still act nice and it's very

1064
00:53:31,200 --> 00:53:34,400
unfortunate for that

1065
00:53:38,700 --> 00:53:41,819
no no no we just discussed yeah we

1066
00:53:41,819 --> 00:53:43,859
already finished it yeah

1067
00:53:43,859 --> 00:53:46,859
so but the the the TA will have the

1068
00:53:46,859 --> 00:53:49,380
criteria so if you are not unsure about

1069
00:53:49,380 --> 00:53:52,220
any of the

1070
00:53:52,220 --> 00:53:57,020
answers cross answers so you can ask it

1071
00:54:15,000 --> 00:54:18,660
okay final system okay

1072
00:54:18,660 --> 00:54:20,780
um

1073
00:54:23,040 --> 00:54:25,980
also so tolerant file systems actually

1074
00:54:25,980 --> 00:54:28,740
file system you can think about if you

1075
00:54:28,740 --> 00:54:30,420
still remember the memory hierarchical

1076
00:54:30,420 --> 00:54:32,760
structure we have the register we have

1077
00:54:32,760 --> 00:54:34,500
the cache we have the memory then we

1078
00:54:34,500 --> 00:54:36,359
have the file we have the disk correct

1079
00:54:36,359 --> 00:54:39,359
so the file system actually has a very

1080
00:54:39,359 --> 00:54:42,359
similar structure abstraction of the

1081
00:54:42,359 --> 00:54:46,619
memory it's very similar no but the file

1082
00:54:46,619 --> 00:54:48,839
the only big issue with the file system

1083
00:54:48,839 --> 00:54:50,099
is that

1084
00:54:50,099 --> 00:54:53,400
file system is a abstraction of our disk

1085
00:54:53,400 --> 00:54:56,160
right disk file system is the

1086
00:54:56,160 --> 00:54:58,800
abstraction of the disk

1087
00:54:58,800 --> 00:55:01,380
the memory memory chapter in the memory

1088
00:55:01,380 --> 00:55:04,380
is the abstraction of the ram IEM right

1089
00:55:04,380 --> 00:55:06,599
file system is abstraction of disk so

1090
00:55:06,599 --> 00:55:08,520
the differences between the hardware of

1091
00:55:08,520 --> 00:55:10,260
the disk the disk hardware and the

1092
00:55:10,260 --> 00:55:11,579
memory Hardware what is difference

1093
00:55:11,579 --> 00:55:13,140
between this hardware and memory

1094
00:55:13,140 --> 00:55:14,400
Hardware

1095
00:55:14,400 --> 00:55:17,300
what are the difference

1096
00:55:21,180 --> 00:55:21,720
um

1097
00:55:21,720 --> 00:55:24,000
internal memory hierarchy what is the

1098
00:55:24,000 --> 00:55:26,099
difference between memory and disk what

1099
00:55:26,099 --> 00:55:29,059
is the difference yeah Andrew

1100
00:55:30,359 --> 00:55:32,700
the memory is a volunteer in this case

1101
00:55:32,700 --> 00:55:37,220
uh number very good and any else

1102
00:55:37,319 --> 00:55:40,760
the difference is yeah Andrew

1103
00:55:40,940 --> 00:55:43,380
memory is smaller and more extensive so

1104
00:55:43,380 --> 00:55:45,839
Memories We have very limited memory but

1105
00:55:45,839 --> 00:55:48,599
we have a lot of disk right we love this

1106
00:55:48,599 --> 00:55:52,800
so in that case if we have a page as an

1107
00:55:52,800 --> 00:55:55,579
obstruction of the memory that is 4kb

1108
00:55:55,579 --> 00:55:59,339
corresponds B we need we also have a

1109
00:55:59,339 --> 00:56:04,200
same obstruction in the disk and then we

1110
00:56:04,200 --> 00:56:07,140
call that block we call it a block and

1111
00:56:07,140 --> 00:56:09,900
block is larger than the page so we are

1112
00:56:09,900 --> 00:56:11,940
going to discuss that later

1113
00:56:11,940 --> 00:56:16,460
so first why we need file system

1114
00:56:22,619 --> 00:56:25,859
so the many important applications leads

1115
00:56:25,859 --> 00:56:28,140
to store more information than that in

1116
00:56:28,140 --> 00:56:31,020
Virtual address space of a process the

1117
00:56:31,020 --> 00:56:33,420
information must survive so that is the

1118
00:56:33,420 --> 00:56:36,119
first thing is that okay we need more

1119
00:56:36,119 --> 00:56:39,960
more spaces we need more Hardware spaces

1120
00:56:39,960 --> 00:56:43,980
second we need we need to save the

1121
00:56:43,980 --> 00:56:46,859
information right we need long volunteer

1122
00:56:46,859 --> 00:56:48,420
resource

1123
00:56:48,420 --> 00:56:51,660
third multiple process must be able to

1124
00:56:51,660 --> 00:56:53,240
access the information

1125
00:56:53,240 --> 00:56:57,200
concurrently concurrently

1126
00:57:08,280 --> 00:57:10,619
so we need to have multiple processors

1127
00:57:10,619 --> 00:57:13,559
able to access the information so what

1128
00:57:13,559 --> 00:57:15,020
kind of information

1129
00:57:15,020 --> 00:57:17,700
for example you have you have a

1130
00:57:17,700 --> 00:57:19,859
directory you have a directory saying

1131
00:57:19,859 --> 00:57:21,859
that the graders of the class

1132
00:57:21,859 --> 00:57:25,200
many students may be interested in the

1133
00:57:25,200 --> 00:57:29,640
graders of of him or her so they need to

1134
00:57:29,640 --> 00:57:32,099
concurrently access the same file

1135
00:57:32,099 --> 00:57:34,380
then you need to have a schedule to

1136
00:57:34,380 --> 00:57:39,020
enable that multiple process success

1137
00:57:41,160 --> 00:57:43,319
so how do how do we find the information

1138
00:57:43,319 --> 00:57:47,099
with safety into the disk how do how do

1139
00:57:47,099 --> 00:57:50,700
you keep one user from reading and

1140
00:57:50,700 --> 00:57:54,240
another user's data another user's data

1141
00:57:54,240 --> 00:57:56,700
so how do you keep one user from Reading

1142
00:57:56,700 --> 00:57:58,800
another user's data

1143
00:57:58,800 --> 00:58:01,819
we use the

1144
00:58:02,960 --> 00:58:04,559
it's

1145
00:58:04,559 --> 00:58:07,280
or in the file if you look at the

1146
00:58:07,280 --> 00:58:09,720
property of the file it can have some

1147
00:58:09,720 --> 00:58:12,660
read opening right right holding it can

1148
00:58:12,660 --> 00:58:14,940
how you can set it to be hide from

1149
00:58:14,940 --> 00:58:16,920
special users

1150
00:58:16,920 --> 00:58:19,680
for example in in the computer we can

1151
00:58:19,680 --> 00:58:22,079
set a special User Group

1152
00:58:22,079 --> 00:58:24,180
and the administrative group in the

1153
00:58:24,180 --> 00:58:26,099
administrative group we can see all the

1154
00:58:26,099 --> 00:58:28,800
files but in the user group you may only

1155
00:58:28,800 --> 00:58:31,260
see part of the file that is how can we

1156
00:58:31,260 --> 00:58:34,079
how can we keep one user from Reading

1157
00:58:34,079 --> 00:58:36,720
another usage data okay

1158
00:58:36,720 --> 00:58:38,720
okay

1159
00:58:41,700 --> 00:58:43,859
so the motivation the motivation is that

1160
00:58:43,859 --> 00:58:45,780
we need to use file system as an

1161
00:58:45,780 --> 00:58:47,700
obstruction to deal with accessing the

1162
00:58:47,700 --> 00:58:50,880
information capture in blocks on a disk

1163
00:58:50,880 --> 00:58:53,220
block the block here the block you

1164
00:58:53,220 --> 00:58:55,319
single the block is same as the page in

1165
00:58:55,319 --> 00:58:58,020
the memory the block the block is the

1166
00:58:58,020 --> 00:59:01,460
abstraction of the file system

1167
00:59:05,000 --> 00:59:08,579
files are created by a process there

1168
00:59:08,579 --> 00:59:10,859
might be thousands of them on the disk

1169
00:59:10,859 --> 00:59:13,079
or I structure them name them and

1170
00:59:13,079 --> 00:59:15,780
protect them

1171
00:59:15,780 --> 00:59:18,359
so there's two ways of looking at one we

1172
00:59:18,359 --> 00:59:20,280
are learning file system we are going to

1173
00:59:20,280 --> 00:59:24,540
look at it learn it from two perspective

1174
00:59:24,540 --> 00:59:28,140
one perspective is from the user point

1175
00:59:28,140 --> 00:59:30,559
of view

1176
00:59:31,140 --> 00:59:33,180
another perspective is from the

1177
00:59:33,180 --> 00:59:37,040
implementation point of view

1178
00:59:50,880 --> 00:59:53,280
the user point of view is how do we

1179
00:59:53,280 --> 00:59:55,799
label file protect it and organize these

1180
00:59:55,799 --> 00:59:58,500
files and the implementations of how can

1181
00:59:58,500 --> 01:00:02,460
how are they organized on your disk

1182
01:00:02,460 --> 01:00:06,980
so file systems the user point of view

1183
01:00:07,500 --> 01:00:10,319
lay means structural directories so that

1184
01:00:10,319 --> 01:00:13,079
is how we see a file system right how is

1185
01:00:13,079 --> 01:00:16,040
your file system so you can look at your

1186
01:00:16,040 --> 01:00:19,040
your laptop

1187
01:00:19,040 --> 01:00:21,720
click that into the disk what you are

1188
01:00:21,720 --> 01:00:24,359
going to see click it into the disk you

1189
01:00:24,359 --> 01:00:26,819
are going to see a lot of folders right

1190
01:00:26,819 --> 01:00:29,780
file folders

1191
01:00:29,819 --> 01:00:33,299
right and that is the file system so go

1192
01:00:33,299 --> 01:00:36,540
to the city it's called the disk you see

1193
01:00:36,540 --> 01:00:38,760
a lot of file folders and you click into

1194
01:00:38,760 --> 01:00:40,440
the file folders what you are going to

1195
01:00:40,440 --> 01:00:42,480
see you're going to see another file

1196
01:00:42,480 --> 01:00:44,520
folders right and then you click there

1197
01:00:44,520 --> 01:00:47,520
you see another file folders that is the

1198
01:00:47,520 --> 01:00:49,260
file system that is the structure of the

1199
01:00:49,260 --> 01:00:51,180
file system so what is the structure

1200
01:00:51,180 --> 01:00:53,280
it's a tree structure right it's a tree

1201
01:00:53,280 --> 01:00:55,920
structure you click the folders in the

1202
01:00:55,920 --> 01:00:58,500
into the disk any of the disk you click

1203
01:00:58,500 --> 01:01:01,140
it and then it shows another folder you

1204
01:01:01,140 --> 01:01:03,839
click again it shows another folder so

1205
01:01:03,839 --> 01:01:06,900
how the OS organize these folders a user

1206
01:01:06,900 --> 01:01:09,180
tree structure that is structure and

1207
01:01:09,180 --> 01:01:11,339
what's the limit so while you are naming

1208
01:01:11,339 --> 01:01:15,180
a folder naming a file you can

1209
01:01:15,180 --> 01:01:18,839
you can name it using any of the words

1210
01:01:18,839 --> 01:01:20,520
right you can name it with any of the

1211
01:01:20,520 --> 01:01:22,260
words that you like you can use some

1212
01:01:22,260 --> 01:01:24,660
special parameters right special

1213
01:01:24,660 --> 01:01:27,839
character characters you can use that

1214
01:01:27,839 --> 01:01:30,720
and the directories one thing to take

1215
01:01:30,720 --> 01:01:33,480
away is that from the OS point of view

1216
01:01:33,480 --> 01:01:36,359
the osc's directory is also same as a

1217
01:01:36,359 --> 01:01:38,640
file so if you look at the code in the

1218
01:01:38,640 --> 01:01:41,339
OS the directory has the same code as

1219
01:01:41,339 --> 01:01:43,500
the file they just have only one

1220
01:01:43,500 --> 01:01:45,240
difference it's like one bit shows that

1221
01:01:45,240 --> 01:01:47,160
it's a directory or file it's just like

1222
01:01:47,160 --> 01:01:51,000
it's a file or it's a directory

1223
01:01:51,000 --> 01:01:54,859
so let's look at the learning

1224
01:02:03,119 --> 01:02:05,520
or current operating system allows

1225
01:02:05,520 --> 01:02:08,760
streams of one to eight letters as a

1226
01:02:08,760 --> 01:02:11,780
legal file names

1227
01:02:12,240 --> 01:02:14,220
so for example you can say it's like

1228
01:02:14,220 --> 01:02:17,940
Blues Cassie Andrew a possible file

1229
01:02:17,940 --> 01:02:21,240
names and frequently digits and special

1230
01:02:21,240 --> 01:02:24,299
characters are also permitted so for

1231
01:02:24,299 --> 01:02:26,280
example you can say like two

1232
01:02:26,280 --> 01:02:27,900
like Cassie

1233
01:02:27,900 --> 01:02:31,500
something like that so windows

1234
01:02:31,500 --> 01:02:34,559
oh that is from the old um

1235
01:02:34,559 --> 01:02:37,500
in order to file a system format I'll

1236
01:02:37,500 --> 01:02:38,880
say something from we happen to file

1237
01:02:38,880 --> 01:02:40,440
system format

1238
01:02:40,440 --> 01:02:42,440
um

1239
01:02:45,240 --> 01:02:48,240
yes

1240
01:02:50,819 --> 01:02:52,440
file name

1241
01:02:52,440 --> 01:02:55,460
okay because for file name

1242
01:02:55,460 --> 01:02:58,680
counter example by saying that the the

1243
01:02:58,680 --> 01:03:01,319
um the name of this of this presentation

1244
01:03:01,319 --> 01:03:03,059
is actually more than eight characters

1245
01:03:03,059 --> 01:03:05,960
so

1246
01:03:06,839 --> 01:03:11,000
or eight letters it's eight letters

1247
01:03:11,099 --> 01:03:14,819
okay okay oh okay okay yeah yeah okay

1248
01:03:14,819 --> 01:03:16,799
I'm reading the content from the

1249
01:03:16,799 --> 01:03:19,859
textbook textbook is is written

1250
01:03:19,859 --> 01:03:22,500
five years ago that is

1251
01:03:22,500 --> 01:03:28,020
of os Advance okay OS Advanced yeah

1252
01:03:28,020 --> 01:03:31,079
okay so it's like this animal however

1253
01:03:31,079 --> 01:03:32,640
that

1254
01:03:32,640 --> 01:03:35,280
this is the old

1255
01:03:35,280 --> 01:03:37,319
all the

1256
01:03:37,319 --> 01:03:40,020
um file system format so we have the

1257
01:03:40,020 --> 01:03:42,540
file system format okay

1258
01:03:42,540 --> 01:03:46,440
so you have Windows 9 Windows 1980s it's

1259
01:03:46,440 --> 01:03:50,099
from Windows 1980s and another file

1260
01:03:50,099 --> 01:03:52,799
formatted file

1261
01:03:52,799 --> 01:03:57,240
the file system format is FAT32

1262
01:03:57,240 --> 01:03:59,760
and now we have the n

1263
01:03:59,760 --> 01:04:02,940
FS right the file name file names in the

1264
01:04:02,940 --> 01:04:05,359
Unicode

1265
01:04:09,660 --> 01:04:12,540
so Unix does not always enforce a

1266
01:04:12,540 --> 01:04:15,960
meaning for the suffix Stars the space

1267
01:04:15,960 --> 01:04:18,900
is very old you may not heard of that MS

1268
01:04:18,900 --> 01:04:22,319
DOS you how do anyone heard of that it's

1269
01:04:22,319 --> 01:04:25,140
it's more it's you heard of that Andrew

1270
01:04:25,140 --> 01:04:29,099
no it's it's it's older than you

1271
01:04:29,099 --> 01:04:34,160
it's older than you it's it's at my age

1272
01:04:34,500 --> 01:04:37,500
when I was borrowing it we use the math

1273
01:04:37,500 --> 01:04:41,640
dots it's very there's no UI so you need

1274
01:04:41,640 --> 01:04:44,520
to type everything is need to type we

1275
01:04:44,520 --> 01:04:47,880
just have a black screen and you type

1276
01:04:47,880 --> 01:04:50,280
everything there is a muscle up

1277
01:04:50,280 --> 01:04:53,099
always a surface example so it's oh this

1278
01:04:53,099 --> 01:04:56,160
surface examples we are see as computer

1279
01:04:56,160 --> 01:04:58,260
science major so we need to know that

1280
01:04:58,260 --> 01:05:01,940
okay we need to know that

1281
01:05:04,859 --> 01:05:07,520
so this is easy right

1282
01:05:07,520 --> 01:05:12,000
JFC Java and peace

1283
01:05:12,000 --> 01:05:14,339
MP3

1284
01:05:14,339 --> 01:05:20,000
PDF my PS text right text

1285
01:05:20,040 --> 01:05:24,619
Zip Zip is the compressed archive

1286
01:05:25,140 --> 01:05:29,339
these any students know that Bak

1287
01:05:29,339 --> 01:05:31,740
Ed so

1288
01:05:31,740 --> 01:05:33,960
that's not backup files

1289
01:05:33,960 --> 01:05:36,240
um in many logs in the system logs you

1290
01:05:36,240 --> 01:05:39,119
can see a lot of backup files I would

1291
01:05:39,119 --> 01:05:40,859
suggest to you after you come back home

1292
01:05:40,859 --> 01:05:43,319
you can open the hidden files in the OS

1293
01:05:43,319 --> 01:05:47,040
if you go to the file a property in the

1294
01:05:47,040 --> 01:05:50,819
in your in a Windows systems it can ask

1295
01:05:50,819 --> 01:05:52,440
you to

1296
01:05:52,440 --> 01:05:55,460
ask you whether you want to hide the

1297
01:05:55,460 --> 01:05:58,140
suffix then you're saying that okay I

1298
01:05:58,140 --> 01:06:00,420
will see the whole names and then you

1299
01:06:00,420 --> 01:06:03,000
expose the other hidden files then you

1300
01:06:03,000 --> 01:06:06,740
can see a lot of back files there

1301
01:06:07,440 --> 01:06:11,960
okay the file structure file structure

1302
01:06:25,380 --> 01:06:28,619
so um to learn that the file structure

1303
01:06:28,619 --> 01:06:32,099
let's see what we did at the early age

1304
01:06:32,099 --> 01:06:34,319
at the early age we use the biased

1305
01:06:34,319 --> 01:06:36,660
sequences by sequences file structure

1306
01:06:36,660 --> 01:06:37,680
means that

1307
01:06:37,680 --> 01:06:41,420
this is the disk

1308
01:06:41,640 --> 01:06:45,240
so this is a disk right it sucks you

1309
01:06:45,240 --> 01:06:47,760
have the sectors and the

1310
01:06:47,760 --> 01:06:49,280
the the the the

1311
01:06:49,280 --> 01:06:52,260
pointers to each sector this is pointer

1312
01:06:52,260 --> 01:06:54,660
to that so this is the disk each part of

1313
01:06:54,660 --> 01:06:57,119
the sectors right

1314
01:06:57,119 --> 01:07:00,720
then the fire structure means that if I

1315
01:07:00,720 --> 01:07:04,160
have a file like this

1316
01:07:04,380 --> 01:07:07,200
so when the osc file is just to see many

1317
01:07:07,200 --> 01:07:10,680
one zero one zero bytes or range right

1318
01:07:10,680 --> 01:07:13,200
then we have many files let's say many

1319
01:07:13,200 --> 01:07:15,480
bytes or range so how are we going to

1320
01:07:15,480 --> 01:07:17,640
structure this file save these files

1321
01:07:17,640 --> 01:07:19,859
into the disk that means file structure

1322
01:07:19,859 --> 01:07:22,200
so the old years we use the buy

1323
01:07:22,200 --> 01:07:24,960
sequences by sequences and then we use

1324
01:07:24,960 --> 01:07:28,020
some fixed lens records then we use the

1325
01:07:28,020 --> 01:07:30,000
tree of the records so let's look at the

1326
01:07:30,000 --> 01:07:33,319
differences of the age

1327
01:07:33,359 --> 01:07:36,720
so this is the byte sequences so when we

1328
01:07:36,720 --> 01:07:39,839
do buy sequences we just

1329
01:07:39,839 --> 01:07:42,960
see the file or the bytes see the files

1330
01:07:42,960 --> 01:07:45,180
device and put them one after another

1331
01:07:45,180 --> 01:07:47,880
that is a very old Year all the year

1332
01:07:47,880 --> 01:07:50,220
like the mess stores even the mess

1333
01:07:50,220 --> 01:07:53,160
stores we do not use that button this is

1334
01:07:53,160 --> 01:07:56,280
all the year file system and then and

1335
01:07:56,280 --> 01:07:59,180
then we

1336
01:08:01,619 --> 01:08:04,980
the OS the color of events are a little

1337
01:08:04,980 --> 01:08:07,619
bit then trying to see how it's not

1338
01:08:07,619 --> 01:08:10,319
efficient to save just the buys of the

1339
01:08:10,319 --> 01:08:12,660
buys for each file so what we are going

1340
01:08:12,660 --> 01:08:15,359
to do is that we segments around Robin

1341
01:08:15,359 --> 01:08:19,620
we we divided the disk into many same

1342
01:08:19,620 --> 01:08:22,500
columns the same spaces and we put a

1343
01:08:22,500 --> 01:08:25,319
file in each space but it's also not

1344
01:08:25,319 --> 01:08:28,380
inefficient it's not all not efficient

1345
01:08:28,380 --> 01:08:30,960
because it will waste a lot of space

1346
01:08:30,960 --> 01:08:33,920
then

1347
01:08:36,198 --> 01:08:40,799
developed we we are using the

1348
01:08:40,799 --> 01:08:42,960
tree structure we are using a tree

1349
01:08:42,960 --> 01:08:44,160
structure

1350
01:08:44,160 --> 01:08:46,620
that is what the um

1351
01:08:46,620 --> 01:08:49,799
most modern operating system did so Auto

1352
01:08:49,799 --> 01:08:52,080
operating systems use the tree structure

1353
01:08:52,080 --> 01:08:56,900
to organize the files the tree structure

1354
01:09:02,160 --> 01:09:05,399
signature structure we have the root

1355
01:09:05,399 --> 01:09:09,139
folder right the loot folder

1356
01:09:10,140 --> 01:09:14,040
and then we have different folders like

1357
01:09:14,040 --> 01:09:16,620
in the uh like a user

1358
01:09:16,620 --> 01:09:19,400
rice

1359
01:09:21,179 --> 01:09:22,439
Etc

1360
01:09:22,439 --> 01:09:26,100
device of many folders

1361
01:09:26,100 --> 01:09:29,960
that is the tree structure

1362
01:09:30,179 --> 01:09:33,600
the tree structures

1363
01:09:33,600 --> 01:09:36,359
okay and then file types

1364
01:09:36,359 --> 01:09:40,279
regular file we have the US

1365
01:09:42,779 --> 01:09:44,880
the regular file we have the regular

1366
01:09:44,880 --> 01:09:47,219
file the directories the character

1367
01:09:47,219 --> 01:09:49,560
special files and the block special

1368
01:09:49,560 --> 01:09:52,319
files there's four types of

1369
01:09:52,319 --> 01:09:55,440
files four types of files the regular

1370
01:09:55,440 --> 01:09:57,480
file are the ones that contain user

1371
01:09:57,480 --> 01:09:59,719
information

1372
01:10:01,699 --> 01:10:05,219
directories are system files for

1373
01:10:05,219 --> 01:10:06,960
maintain the structure of the file

1374
01:10:06,960 --> 01:10:10,440
systems so we are going to study the

1375
01:10:10,440 --> 01:10:11,940
directory later

1376
01:10:11,940 --> 01:10:14,820
chemical special files are related to

1377
01:10:14,820 --> 01:10:18,660
the i o and used to model serials i o

1378
01:10:18,660 --> 01:10:21,960
devices such as terminals printers and

1379
01:10:21,960 --> 01:10:24,480
networks

1380
01:10:24,480 --> 01:10:28,460
so any students familiar with that

1381
01:10:31,199 --> 01:10:35,820
when you insert your USB USB

1382
01:10:35,820 --> 01:10:39,719
into the into the laptop when you insert

1383
01:10:39,719 --> 01:10:43,560
that you can see that it's actually

1384
01:10:43,560 --> 01:10:47,880
Os or creates a folder for that USB and

1385
01:10:47,880 --> 01:10:50,820
loaded that folder into the OS tree

1386
01:10:50,820 --> 01:10:54,540
structure that is why if you insert a

1387
01:10:54,540 --> 01:10:57,659
USB into let's say your Ubuntu right

1388
01:10:57,659 --> 01:10:59,460
then you can see a

1389
01:10:59,460 --> 01:11:02,460
special or in separate folder for that

1390
01:11:02,460 --> 01:11:05,580
that is a special character special file

1391
01:11:05,580 --> 01:11:08,580
that is you use to represent all the i o

1392
01:11:08,580 --> 01:11:11,940
resources same as monitor motor is also

1393
01:11:11,940 --> 01:11:14,340
have a going to have a i o character

1394
01:11:14,340 --> 01:11:18,500
used to represent

1395
01:11:19,620 --> 01:11:22,920
a monitor okay a monitor when we insert

1396
01:11:22,920 --> 01:11:25,140
a monitor to connect the monitor to the

1397
01:11:25,140 --> 01:11:28,199
uh to the OS it's going to also create a

1398
01:11:28,199 --> 01:11:30,719
file relates to that and use the pipe

1399
01:11:30,719 --> 01:11:33,540
operation to transfer data between the

1400
01:11:33,540 --> 01:11:36,179
memory and the monitor

1401
01:11:36,179 --> 01:11:39,120
so well there's there's a very

1402
01:11:39,120 --> 01:11:41,880
interesting book I think it's the the

1403
01:11:41,880 --> 01:11:44,159
first sentence of that book this tells

1404
01:11:44,159 --> 01:11:46,980
you everything in the OS is a fire

1405
01:11:46,980 --> 01:11:49,020
everything in the OS is a file it's very

1406
01:11:49,020 --> 01:11:51,480
classical Iceberg I forgot the name

1407
01:11:51,480 --> 01:11:55,560
um it's it's it's written by a professor

1408
01:11:55,560 --> 01:11:57,600
you know Canadian Island it's very old

1409
01:11:57,600 --> 01:12:00,300
classic book and the first sentence of

1410
01:12:00,300 --> 01:12:02,699
the book is that everything in the OS in

1411
01:12:02,699 --> 01:12:04,800
operating system is a file so everything

1412
01:12:04,800 --> 01:12:07,980
you see the monitor the USB the folders

1413
01:12:07,980 --> 01:12:10,199
the file the and the just the regular

1414
01:12:10,199 --> 01:12:13,620
files they are all file so this the io

1415
01:12:13,620 --> 01:12:16,340
devices the i o devices

1416
01:12:16,340 --> 01:12:20,040
a character special files and block

1417
01:12:20,040 --> 01:12:22,320
special files block special files used

1418
01:12:22,320 --> 01:12:25,920
to model disk like the disk C disk D

1419
01:12:25,920 --> 01:12:28,800
disk e there are also files they are

1420
01:12:28,800 --> 01:12:32,040
just above the folder right they also in

1421
01:12:32,040 --> 01:12:34,679
the loot we are maybe in the root folder

1422
01:12:34,679 --> 01:12:37,199
and then this disk okay this disk

1423
01:12:37,199 --> 01:12:39,980
different disk

1424
01:12:46,560 --> 01:12:49,640
so um

1425
01:12:50,040 --> 01:12:52,560
so that in a regular file we have the

1426
01:12:52,560 --> 01:12:55,440
ASCO and binary code binary okay and ask

1427
01:12:55,440 --> 01:12:58,620
her this is the unscore code in the

1428
01:12:58,620 --> 01:13:01,199
Oscar so this is the article code that's

1429
01:13:01,199 --> 01:13:04,920
different formats different formats

1430
01:13:04,920 --> 01:13:08,100
it's Oscar called American Standard code

1431
01:13:08,100 --> 01:13:11,699
for information interchange they can be

1432
01:13:11,699 --> 01:13:14,699
displayed and printed as it is and they

1433
01:13:14,699 --> 01:13:19,699
can be added by with any text editor

1434
01:13:27,420 --> 01:13:30,560
yeah this is the user point of view

1435
01:13:30,560 --> 01:13:33,420
the way we learn is that how we use the

1436
01:13:33,420 --> 01:13:35,940
file system in here this part may be

1437
01:13:35,940 --> 01:13:37,920
very boring and easy to understand

1438
01:13:37,920 --> 01:13:40,080
because we are using file system every

1439
01:13:40,080 --> 01:13:41,040
day

1440
01:13:41,040 --> 01:13:43,080
yeah

1441
01:13:43,080 --> 01:13:45,719
yeah let's look at this better than that

1442
01:13:45,719 --> 01:13:49,340
binary file types

1443
01:13:49,500 --> 01:13:51,719
binary file types that is the already

1444
01:13:51,719 --> 01:13:53,400
over let's skip that

1445
01:13:53,400 --> 01:13:55,880
the file access this is this something

1446
01:13:55,880 --> 01:13:58,380
it's something that needs to have

1447
01:13:58,380 --> 01:14:00,780
retention so five percent is very

1448
01:14:00,780 --> 01:14:02,340
important because we are using file

1449
01:14:02,340 --> 01:14:05,640
access to prevent the user to write or

1450
01:14:05,640 --> 01:14:09,060
read another user's files for file

1451
01:14:09,060 --> 01:14:11,179
access

1452
01:14:14,640 --> 01:14:16,800
so in the early operating system they

1453
01:14:16,800 --> 01:14:18,900
provide only one kind of file access

1454
01:14:18,900 --> 01:14:21,719
called sequential access so in this

1455
01:14:21,719 --> 01:14:24,420
system a process could read all the

1456
01:14:24,420 --> 01:14:26,460
bytes and Records in a file in order

1457
01:14:26,460 --> 01:14:28,260
starting at the beginning but I couldn't

1458
01:14:28,260 --> 01:14:30,000
skip around and read them out of the

1459
01:14:30,000 --> 01:14:33,060
order so that's the secretion access and

1460
01:14:33,060 --> 01:14:35,040
random access files are essential for

1461
01:14:35,040 --> 01:14:37,620
many applications for example the

1462
01:14:37,620 --> 01:14:41,400
database systems so if

1463
01:14:41,400 --> 01:14:44,219
we want to we want to just look at a

1464
01:14:44,219 --> 01:14:46,260
special file not starting from the

1465
01:14:46,260 --> 01:14:47,940
beginning to the end then we need a

1466
01:14:47,940 --> 01:14:51,620
random access to the files right

1467
01:14:52,500 --> 01:14:55,500
so if in IO plan customers cross up want

1468
01:14:55,500 --> 01:14:57,600
to reserve seats for airplane for

1469
01:14:57,600 --> 01:14:59,100
particular flight the reservation

1470
01:14:59,100 --> 01:15:01,140
program might be able to access the

1471
01:15:01,140 --> 01:15:03,900
records for that that flight without

1472
01:15:03,900 --> 01:15:06,179
having to read the records for thousands

1473
01:15:06,179 --> 01:15:09,179
of the art of fights the other flights

1474
01:15:09,179 --> 01:15:12,600
that's a random access so file access so

1475
01:15:12,600 --> 01:15:14,820
how to do file access we use the file

1476
01:15:14,820 --> 01:15:18,440
attributes file attributes

1477
01:15:19,380 --> 01:15:24,380
every file has a names and its data

1478
01:15:26,880 --> 01:15:29,820
so the for example production

1479
01:15:29,820 --> 01:15:32,780
yes Andrew

1480
01:15:37,320 --> 01:15:41,659
or what's your name the name of RAM

1481
01:15:44,040 --> 01:15:47,840
oh yeah for this yeah

1482
01:15:48,860 --> 01:15:51,239
what are you accessing the file system

1483
01:15:51,239 --> 01:15:53,580
is rather more accessible access means

1484
01:15:53,580 --> 01:15:57,120
that I showed uh so this is the compared

1485
01:15:57,120 --> 01:15:59,760
to the old excess patterns in the old OS

1486
01:15:59,760 --> 01:16:02,940
in the old OS they can not search the

1487
01:16:02,940 --> 01:16:05,940
files that they want they need to if

1488
01:16:05,940 --> 01:16:08,100
they need to you remember that in the

1489
01:16:08,100 --> 01:16:10,500
Odyssey or old OS operating systems

1490
01:16:10,500 --> 01:16:13,140
there's no UI remember I told you

1491
01:16:13,140 --> 01:16:15,719
there's no UI so everything you need to

1492
01:16:15,719 --> 01:16:18,480
command when I learn computer science

1493
01:16:18,480 --> 01:16:21,840
when I know I I'm much older than you

1494
01:16:21,840 --> 01:16:24,179
when I learn a computer science I didn't

1495
01:16:24,179 --> 01:16:26,520
learn the UI I learned a lot of commands

1496
01:16:26,520 --> 01:16:28,860
first lesson is like different command

1497
01:16:28,860 --> 01:16:30,480
like

1498
01:16:30,480 --> 01:16:34,380
um many Ms doors come on like the CMD

1499
01:16:34,380 --> 01:16:37,920
and the CD is the same as what you do in

1500
01:16:37,920 --> 01:16:41,940
Ubuntu number at my age there's no UI

1501
01:16:41,940 --> 01:16:44,460
everything is you need to search and for

1502
01:16:44,460 --> 01:16:46,980
the files to win if I want to search a

1503
01:16:46,980 --> 01:16:49,800
file I need to type of commands and then

1504
01:16:49,800 --> 01:16:51,960
OS search for me from the beginning to

1505
01:16:51,960 --> 01:16:53,940
the end that is called sequential access

1506
01:16:53,940 --> 01:16:55,640
but not

1507
01:16:55,640 --> 01:16:59,280
Oscar developed right we have the

1508
01:16:59,280 --> 01:17:02,640
right now the windows 11 right it gives

1509
01:17:02,640 --> 01:17:06,420
you the UI so basically we just you just

1510
01:17:06,420 --> 01:17:08,820
go into the disk and find out the file

1511
01:17:08,820 --> 01:17:12,380
you want that is the random access

1512
01:17:15,360 --> 01:17:19,820
okay let's look at this this

1513
01:17:20,640 --> 01:17:22,800
the file attributes

1514
01:17:22,800 --> 01:17:24,840
um

1515
01:17:24,840 --> 01:17:27,659
the password creator owner there's no

1516
01:17:27,659 --> 01:17:30,719
questions right read only flag okay this

1517
01:17:30,719 --> 01:17:33,239
is this

1518
01:17:33,239 --> 01:17:35,520
you're familiar with this Command right

1519
01:17:35,520 --> 01:17:38,520
c-h-o-md

1520
01:17:40,140 --> 01:17:43,500
is is

1521
01:17:47,000 --> 01:17:50,280
you can change you you you if I type in

1522
01:17:50,280 --> 01:17:52,800
the 777 then I can give the

1523
01:17:52,800 --> 01:17:57,179
file to all the access right 777 means

1524
01:17:57,179 --> 01:17:59,659
All Access

1525
01:18:01,739 --> 01:18:03,840
let's see that this is the uh this give

1526
01:18:03,840 --> 01:18:06,719
you is actually help you set the what is

1527
01:18:06,719 --> 01:18:09,060
read out in Right audience excuse only

1528
01:18:09,060 --> 01:18:11,760
and the group will need something like

1529
01:18:11,760 --> 01:18:13,940
that

1530
01:18:24,420 --> 01:18:27,300
you need to remember some of the batch

1531
01:18:27,300 --> 01:18:30,420
scripts there's very they are very good

1532
01:18:30,420 --> 01:18:32,400
textbooks about the batch scripts

1533
01:18:32,400 --> 01:18:34,260
there's very heavy book but you do not

1534
01:18:34,260 --> 01:18:36,780
need to buy that you just play with the

1535
01:18:36,780 --> 01:18:39,540
Ubuntu it's very important after your

1536
01:18:39,540 --> 01:18:42,360
graduates you are going to go join any

1537
01:18:42,360 --> 01:18:44,659
company software accomplished

1538
01:18:44,659 --> 01:18:48,480
they require you to

1539
01:18:48,480 --> 01:18:52,560
um familiar with this batch scripts code

1540
01:18:52,560 --> 01:18:54,840
so this command and many commands is

1541
01:18:54,840 --> 01:18:57,780
reading to changing the file attributes

1542
01:18:57,780 --> 01:19:01,340
changing the file attributes

1543
01:19:04,199 --> 01:19:07,500
I see some chords for files so this is a

1544
01:19:07,500 --> 01:19:09,719
system code for files

1545
01:19:09,719 --> 01:19:11,880
that's very easy to understand so I'm

1546
01:19:11,880 --> 01:19:14,100
skip that see some quotes for files

1547
01:19:14,100 --> 01:19:17,580
append append seek

1548
01:19:17,580 --> 01:19:20,340
put so far importance specific place in

1549
01:19:20,340 --> 01:19:22,800
file read and write from that position

1550
01:19:22,800 --> 01:19:28,140
on get attributes make needs most recent

1551
01:19:28,140 --> 01:19:30,060
modification types or running for group

1552
01:19:30,060 --> 01:19:32,840
completion set attributes protection

1553
01:19:32,840 --> 01:19:35,460
attributes and relaim it

1554
01:19:35,460 --> 01:19:38,159
okay and then how can system code be

1555
01:19:38,159 --> 01:19:40,980
used this is some code

1556
01:19:40,980 --> 01:19:43,860
so we read that code it's going to copy

1557
01:19:43,860 --> 01:19:45,420
the file

1558
01:19:45,420 --> 01:19:50,940
so copy the file to ABC to XYZ

1559
01:19:50,940 --> 01:19:54,920
this is the system core code

1560
01:19:55,380 --> 01:19:58,400
this is a

1561
01:20:02,219 --> 01:20:05,100
this is a system core code okay that's

1562
01:20:05,100 --> 01:20:07,739
how we

1563
01:20:07,739 --> 01:20:11,580
how we make a system okay let's quickly

1564
01:20:11,580 --> 01:20:14,280
end us directory okay what is the

1565
01:20:14,280 --> 01:20:17,040
directory directly files which are used

1566
01:20:17,040 --> 01:20:19,320
to organize a collection of files

1567
01:20:19,320 --> 01:20:21,840
collection also called folders

1568
01:20:21,840 --> 01:20:24,239
so directory

1569
01:20:24,239 --> 01:20:26,820
I like to call it a folders or just a

1570
01:20:26,820 --> 01:20:29,300
full directory that they're directly

1571
01:20:29,300 --> 01:20:31,560
you'll still organize a collection of

1572
01:20:31,560 --> 01:20:34,080
files this is the single Library

1573
01:20:34,080 --> 01:20:36,540
directory right it has a root directory

1574
01:20:36,540 --> 01:20:39,659
and then some files under that so

1575
01:20:39,659 --> 01:20:43,020
remember that right now all OS use the

1576
01:20:43,020 --> 01:20:45,600
tree direct choose three structure three

1577
01:20:45,600 --> 01:20:47,940
structure to organize the files and the

1578
01:20:47,940 --> 01:20:53,060
directories hierarchical tree structure

1579
01:20:55,260 --> 01:20:58,679
so this is the loot directory right the

1580
01:20:58,679 --> 01:21:00,659
rule directory and under root directory

1581
01:21:00,659 --> 01:21:03,300
you have many other user directories and

1582
01:21:03,300 --> 01:21:06,120
other users directories so to the Past

1583
01:21:06,120 --> 01:21:08,640
names so we have the absolute past name

1584
01:21:08,640 --> 01:21:10,739
the relative past names

1585
01:21:10,739 --> 01:21:12,840
are you familiar with Star Trek you're

1586
01:21:12,840 --> 01:21:15,260
familiar with that right so the

1587
01:21:15,260 --> 01:21:18,420
operative relative so we

1588
01:21:18,420 --> 01:21:21,540
the absolute means starting from the

1589
01:21:21,540 --> 01:21:24,179
starting from here this is the loot this

1590
01:21:24,179 --> 01:21:28,159
is means loot right this means lose

1591
01:21:29,659 --> 01:21:33,000
so absolute means that you locate a file

1592
01:21:33,000 --> 01:21:35,219
from the beginning the loot directory to

1593
01:21:35,219 --> 01:21:38,699
the end relatively means that we just

1594
01:21:38,699 --> 01:21:41,100
look starting from the current directory

1595
01:21:41,100 --> 01:21:43,679
and then we find out the

1596
01:21:43,679 --> 01:21:46,260
um the the files under the current

1597
01:21:46,260 --> 01:21:49,380
directory that is the relevant relevance

1598
01:21:49,380 --> 01:21:52,020
path

1599
01:21:52,020 --> 01:21:56,940
of the past names okay and this is the

1600
01:21:56,940 --> 01:22:00,540
um this is your new systems directory

1601
01:22:00,540 --> 01:22:04,380
file system directory this is still from

1602
01:22:04,380 --> 01:22:06,780
the user's point of view this is how we

1603
01:22:06,780 --> 01:22:09,179
see how we see our file system looks

1604
01:22:09,179 --> 01:22:10,440
like

1605
01:22:10,440 --> 01:22:12,840
and then later in our next class we are

1606
01:22:12,840 --> 01:22:15,120
going to learn how we develop that so

1607
01:22:15,120 --> 01:22:18,480
you see right now you just see the

1608
01:22:18,480 --> 01:22:20,940
how it appeals to you how the file

1609
01:22:20,940 --> 01:22:24,480
systems used are used by Earth do you

1610
01:22:24,480 --> 01:22:27,900
this is like the um

1611
01:22:27,900 --> 01:22:30,060
if it is a project then this is a

1612
01:22:30,060 --> 01:22:32,640
project requirements okay okay this is

1613
01:22:32,640 --> 01:22:34,699
the project requirements you need to

1614
01:22:34,699 --> 01:22:38,699
specify or three three structural to

1615
01:22:38,699 --> 01:22:40,739
organize the files you need to implement

1616
01:22:40,739 --> 01:22:42,900
that you need to implement the file

1617
01:22:42,900 --> 01:22:45,000
attributes you need to implement the

1618
01:22:45,000 --> 01:22:47,580
access control for the files you need to

1619
01:22:47,580 --> 01:22:49,620
overlapse these files into a tree and

1620
01:22:49,620 --> 01:22:51,360
save the files

1621
01:22:51,360 --> 01:22:54,500
in the disk that can

1622
01:22:54,500 --> 01:22:57,179
preserve maintain the tree structure how

1623
01:22:57,179 --> 01:22:58,679
are you going to do that

1624
01:22:58,679 --> 01:23:01,140
when you implement the system think of

1625
01:23:01,140 --> 01:23:03,600
that question

1626
01:23:03,600 --> 01:23:06,239
of hidden directory operations we have

1627
01:23:06,239 --> 01:23:08,640
many directory operations like craze

1628
01:23:08,640 --> 01:23:10,920
list open open DIY means open the

1629
01:23:10,920 --> 01:23:13,380
directory right close the IR Link and

1630
01:23:13,380 --> 01:23:15,560
Link

1631
01:23:19,920 --> 01:23:21,780
they also there's a there's difference

1632
01:23:21,780 --> 01:23:24,000
between the software link and Hardware

1633
01:23:24,000 --> 01:23:27,739
link any students know that

1634
01:23:28,199 --> 01:23:32,520
link there's a software link and a

1635
01:23:32,520 --> 01:23:35,520
hardware link so I can make a very

1636
01:23:35,520 --> 01:23:38,520
shortcut to a file I just copy the

1637
01:23:38,520 --> 01:23:40,380
shortcut of the file to the to another

1638
01:23:40,380 --> 01:23:42,780
folder then when I click that shortcut I

1639
01:23:42,780 --> 01:23:44,340
can

1640
01:23:44,340 --> 01:23:46,560
I can see the same files that is a

1641
01:23:46,560 --> 01:23:48,480
software link but there's another link

1642
01:23:48,480 --> 01:23:50,520
called Hardware link that I call

1643
01:23:50,520 --> 01:23:52,380
actually copy the file from two

1644
01:23:52,380 --> 01:23:54,120
different places and when I want to

1645
01:23:54,120 --> 01:23:56,040
access the one copy of the file the

1646
01:23:56,040 --> 01:23:57,960
other copy will not change that is the

1647
01:23:57,960 --> 01:24:00,300
hardware disk Hardware link so there's

1648
01:24:00,300 --> 01:24:01,679
two differences

1649
01:24:01,679 --> 01:24:04,440
okay so this is today's class

1650
01:24:04,440 --> 01:24:05,400
um

1651
01:24:05,400 --> 01:24:07,260
starting next class we are going to

1652
01:24:07,260 --> 01:24:09,840
learn from the implementation view of

1653
01:24:09,840 --> 01:24:12,360
the file system okay

1654
01:24:12,360 --> 01:24:15,260
so thank you

1655
01:24:15,360 --> 01:24:17,540
foreign

